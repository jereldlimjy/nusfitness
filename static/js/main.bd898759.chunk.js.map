{"version":3,"sources":["components/Alert.js","components/Calendar.js","components/Chart.js","components/Dashboard.js","components/Slot.js","components/SlotContainer.js","components/Timetable.js","components/Booking.js","components/Home.js","components/Login.js","components/Navbar.js","components/Register.js","components/TelegramLogin.js","components/Profile.js","App.js","index.js"],"names":["Alert","alert","severity","type","msg","Calendar","selectedDates","setSelectedDates","onChange","item","selection","showSelectionPreview","moveRangeOnFirstSelection","months","maxDate","Date","ranges","direction","Chart","setTime","data","chartTitle","tickValues","theme","VictoryTheme","material","containerComponent","labels","obj","datum","date","toLocaleTimeString","hour","minute","hour12","replace","count","radius","minDomain","x","y","maxDomain","height","width","padding","top","right","bottom","left","text","textAnchor","style","fontSize","label","tickFormat","axisLabelComponent","dy","dependentAxis","scale","useStyles","makeStyles","root","breakpoints","down","flexDirection","spacing","color","formControl","marginTop","selectButton","backgroundColor","Dashboard","classes","facilities","h","m","setHours","useState","facility","setFacility","setData","startDate","endDate","key","dayOfWeek","setDayOfWeek","setChartTitle","handleDayChange","e","checkbox","target","checked","parseInt","value","filter","i","handleDayGroupChange","innerText","useEffect","dateRange","addDays","url","window","location","hostname","fetch","method","headers","body","JSON","stringify","indexOf","$gte","$lte","day","credentials","then","res","json","map","toDateString","Box","display","className","flex","maxWidth","Typography","variant","mt","mb","FormControl","InputLabel","id","Select","labelId","MenuItem","FormGroup","row","FormControlLabel","control","Checkbox","includes","Grid","container","justify","xs","Button","fullWidth","onClick","margin","slot","blueGrey","orange","slotLabel","boxSizing","cursor","Slot","handleChange","booked","slotsLeft","slotTime","addHours","currentTime","getTime","Card","disabled","toString","htmlFor","box","flexWrap","SlotContainer","assignedDate","hours","selectedSlot","bookedSlots","slotCount","hourString","slice","matchingSlot","find","length","toLocaleString","LESSON_TYPE_ABBREV","Laboratory","Lecture","Recitation","Tutorial","Workshop","LESSON_ABBREV_TYPE","invert","SEMESTER_NUM","DAY_OF_WEEK","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","title","fontWeight","timeTableCell","timeLabel","lineHeight","inputContainer","marginBottom","timetableButton","marginRight","lightBlue","lessonsButton","inputField","select","minWidth","AppointmentComponent","restProps","isLesson","blue","red","Appointment","AppointmentContent","lessonType","TimeTableCell","props","TimeLabel","TimeScaleLabel","formatDate","TickCell","TimeScaleTickCell","Timetable","showTimeTable","setShowTimeTable","showLessons","setShowLessons","firstDayOfWeek","SetFirstDayOfWeek","timeTableLink","setTimeTableLink","linkError","setLinkError","appointments","setAppointments","retrieveSemester","semMatch","match","specialMatch","deserializeTimetable","serialized","params","qs","parse","mapValues","parseModuleConfig","config","castArray","forEach","serializedModule","split","lesson","lessonTypeAbbr","classNo","getSunday","getDay","diff","getDate","setDate","setTimetable","semester","timetable","a","sunday","allLessons","moduleName","moduleLessons","moduleData","semesterData","currentSemesterData","filteredLessons","Object","keys","flatMap","acadWeekInfo","nusmoderator","academicCalendar","getAcadWeekInfo","currentSem","sem","currentWeek","num","weeks","lessons","startHour","startTime","startMinute","endHour","endTime","endMinute","venue","concat","entries","deserializedTimetable","getMinutes","addMinutes","slots","updateTimetable","Tooltip","TextField","error","helperText","Paper","startDayHour","endDayHour","cellDuration","timeTableCellComponent","timeScaleLabelComponent","timeScaleTickCellComponent","appointmentComponent","appointmentContentComponent","justifyContent","button","border","borderRadius","circularProgress","paper","marginLeft","paddingBottom","header","paddingTop","name","weekdayHours","weekendHours","Booking","handleAlert","setSelectedSlot","setBookedSlots","allBookedSlots","setAllBookedSlots","setSlotCount","submitValue","setSubmitValue","openDialog","setOpenDialog","creditsLeft","setCreditsLeft","loading","setLoading","history","useHistory","now","console","log","state","credits","getCreditsLeft","handleSlotChange","attributes","getBookedSlots","todayDate","getFullYear","getMonth","getSlotsLeft","_id","handleSubmit","useCallback","preventDefault","getAllBookedSlots","response","status","success","handleClose","slotContainers","toLocaleDateString","align","index","Chip","alignItems","CircularProgress","onSubmit","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","Home","loggedIn","textAlign","link","textDecoration","Login","setLoggedIn","email","setEmail","password","setPassword","push","catch","err","Input","required","disableElevation","FormHelperText","to","flexGrow","titleLink","appBar","Navbar","AppBar","position","Toolbar","Register","user","input","TelegramLogin","dataOnauth","first_name","chatId","botName","tableContainer","profileBox","avatar","info","chip","telegramLogin","Profile","setSlots","loadingSlots","setLoadingSlots","loadingCredits","setLoadingCredits","loadingProfile","setLoadingProfile","profile","setProfile","useMemo","ml","mr","Avatar","src","joined","TableContainer","component","Table","TableHead","TableRow","TableCell","TableBody","scope","createMuiTheme","palette","primary","main","overrides","MuiButton","contained","MuiFormLabel","MuiInput","underline","borderBottom","App","setAlert","time","setTimeout","authenticated","basename","process","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd898759.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Alert as MuiAlert } from '@material-ui/lab';\r\n\r\nconst Alert = ({ alert }) => {\r\n\treturn (\r\n\t\talert !== null && (\r\n\t\t\t<MuiAlert severity={alert.type}>{alert.msg}</MuiAlert>\r\n\t\t)\r\n\t)\r\n}\r\n\r\nexport default Alert;","import { DateRange } from \"react-date-range\";\r\n\r\nconst Calendar = ({ selectedDates, setSelectedDates }) => {\r\n  return (\r\n    <DateRange\r\n      onChange={(item) => setSelectedDates([item.selection])}\r\n      showSelectionPreview={true}\r\n      moveRangeOnFirstSelection={false}\r\n      months={1}\r\n      maxDate={new Date()}\r\n      ranges={selectedDates}\r\n      direction=\"horizontal\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","import {\r\n  VictoryLine,\r\n  VictoryChart,\r\n  VictoryAxis,\r\n  VictoryTheme,\r\n  VictoryLabel,\r\n  VictoryVoronoiContainer,\r\n} from \"victory\";\r\n\r\nconst Chart = ({ setTime, data, chartTitle }) => {\r\n  const tickValues = [\r\n    setTime(8, 0),\r\n    setTime(9, 0),\r\n    setTime(10, 0),\r\n    setTime(11, 0),\r\n    setTime(12, 0),\r\n    setTime(13, 0),\r\n    setTime(14, 0),\r\n    setTime(15, 0),\r\n    setTime(16, 0),\r\n    setTime(17, 0),\r\n    setTime(18, 0),\r\n    setTime(19, 0),\r\n    setTime(20, 0),\r\n    setTime(21, 0),\r\n  ];\r\n\r\n  return (\r\n    <VictoryChart\r\n      theme={VictoryTheme.material}\r\n      containerComponent={\r\n        <VictoryVoronoiContainer\r\n          labels={(obj) =>\r\n            `Time: ${obj.datum.date\r\n              .toLocaleTimeString([], {\r\n                hour: \"2-digit\",\r\n                minute: \"2-digit\",\r\n                hour12: false,\r\n              })\r\n              .replace(\":\", \"\")}, Count: ${obj.datum.count}`\r\n          }\r\n          radius={25}\r\n        />\r\n      }\r\n      minDomain={{ x: setTime(7, 0), y: 0 }}\r\n      maxDomain={{ x: setTime(22, 0), y: 40 }}\r\n      height={250}\r\n      width={900}\r\n      padding={{ top: 0, right: 25, bottom: 0, left: 50 }}\r\n    >\r\n      <VictoryLabel\r\n        text={chartTitle}\r\n        x={450}\r\n        y={-30}\r\n        textAnchor=\"middle\"\r\n        style={{ fontSize: 18 }}\r\n      />\r\n      <VictoryAxis\r\n        label=\"Time\"\r\n        tickValues={tickValues}\r\n        tickFormat={(date) => {\r\n          return new Date(date)\r\n            .toLocaleTimeString([], {\r\n              hour: \"2-digit\",\r\n              minute: \"2-digit\",\r\n              hour12: false,\r\n            })\r\n            .replace(\":\", \"\");\r\n        }}\r\n        axisLabelComponent={<VictoryLabel dy={30} />}\r\n      />\r\n      <VictoryAxis\r\n        dependentAxis\r\n        label={\"Capacity\"}\r\n        axisLabelComponent={<VictoryLabel dy={-30} />}\r\n      />\r\n      <VictoryLine\r\n        data={data}\r\n        x=\"date\"\r\n        y=\"count\"\r\n        scale={{ x: \"time\", y: \"linear\" }}\r\n      ></VictoryLine>\r\n    </VictoryChart>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { addDays } from \"date-fns\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"react-date-range/dist/styles.css\"; // main css file\r\nimport \"react-date-range/dist/theme/default.css\"; // theme css fileimport { useEffect, useState } from \"react\";\r\nimport Calendar from \"./Calendar\";\r\nimport Chart from \"./Chart\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      flexDirection: \"column\",\r\n    },\r\n    padding: theme.spacing(2),\r\n    \"& .MuiCheckbox-colorPrimary.Mui-checked\": {\r\n      color: \"rgb(61, 145, 255)\",\r\n    },\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(1),\r\n    width: \"100%\",\r\n  },\r\n  selectButton: {\r\n    backgroundColor: \"rgb(61, 145, 255)\",\r\n  },\r\n}));\r\n\r\nconst Dashboard = () => {\r\n  const classes = useStyles();\r\n\r\n  const facilities = [\r\n    \"Kent Ridge Swimming Pool\",\r\n    \"University Town Swimming Pool\",\r\n    \"Kent Ridge Gym\",\r\n    \"University Sports Centre Gym\",\r\n    \"University Town Gym\",\r\n    \"Wellness Outreach Gym\",\r\n  ];\r\n  const days = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n  const dayGroup = [\"SELECT ALL\", \"REMOVE ALL\", \"WEEKDAYS\", \"WEEKENDS\"];\r\n\r\n  // Set time of current date\r\n  const setTime = (h, m) => {\r\n    const date = new Date();\r\n    date.setHours(h, m, 0, 0);\r\n    return date;\r\n  };\r\n\r\n  const [facility, setFacility] = useState(facilities[0]);\r\n  const [data, setData] = useState([]);\r\n  const [selectedDates, setSelectedDates] = useState([\r\n    {\r\n      startDate: setTime(0, 0),\r\n      endDate: setTime(0, 0),\r\n      key: \"selection\",\r\n    },\r\n  ]);\r\n  const [dayOfWeek, setDayOfWeek] = useState([1, 2, 3, 4, 5, 6, 7]);\r\n  const [chartTitle, setChartTitle] = useState(\"\");\r\n\r\n  // Changing facility\r\n  const handleFacilityChange = (e) => {\r\n    setFacility(e.target.value);\r\n  };\r\n\r\n  // Changing days\r\n  const handleDayChange = (e) => {\r\n    const checkbox = e.target;\r\n    if (checkbox.checked) {\r\n      setDayOfWeek([...dayOfWeek, parseInt(checkbox.value)]);\r\n    } else {\r\n      setDayOfWeek(dayOfWeek.filter((i) => i !== parseInt(checkbox.value)));\r\n    }\r\n  };\r\n\r\n  // Changing day group\r\n  const handleDayGroupChange = (e) => {\r\n    const value = e.target.innerText;\r\n\r\n    switch (value) {\r\n      case \"SELECT ALL\":\r\n        setDayOfWeek([1, 2, 3, 4, 5, 6, 7]);\r\n        break;\r\n      case \"REMOVE ALL\":\r\n        setDayOfWeek([]);\r\n        break;\r\n      case \"WEEKDAYS\":\r\n        setDayOfWeek([2, 3, 4, 5, 6]);\r\n        break;\r\n      case \"WEEKENDS\":\r\n        setDayOfWeek([1, 7]);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  // Fetch data when filters change\r\n  useEffect(() => {\r\n    const [dateRange] = selectedDates;\r\n    const startDate = dateRange.startDate;\r\n    const endDate = addDays(dateRange.endDate, 1); // endDate is 00:00 of end date\r\n\r\n    const url = `${\r\n      window.location.hostname === \"local.nusfitness.com\"\r\n        ? \"http://local.nusfitness.com:5000/\"\r\n        : \"https://salty-reaches-24995.herokuapp.com/\"\r\n    }traffic`;\r\n    \r\n    fetch(url, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        facility: facilities.indexOf(facility),\r\n        date: { $gte: startDate, $lte: endDate },\r\n        day: dayOfWeek,\r\n      }),\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) =>\r\n        setData(\r\n          res.map((e) => ({\r\n            date: new Date(e.date),\r\n            count: e.count,\r\n          }))\r\n        )\r\n      );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [facility, selectedDates, dayOfWeek]);\r\n\r\n  useEffect(() => {\r\n    // console.log(facility);\r\n    // console.log(selectedDates);\r\n    // console.log(selectedDates[0].startDate.toDateString());\r\n    setChartTitle(\r\n      `${facility}\\n${selectedDates[0].startDate.toDateString()} to ${selectedDates[0].endDate.toDateString()} `\r\n    );\r\n  }, [facility, selectedDates, dayOfWeek]);\r\n\r\n  return (\r\n    <Box display=\"flex\" className={classes.root}>\r\n      <Box\r\n        display=\"flex\"\r\n        flex=\"1 1 0\"\r\n        flexDirection=\"column\"\r\n        maxWidth=\"370px\"\r\n        className={classes.root}\r\n      >\r\n        <Typography variant=\"h4\">Filters</Typography>\r\n        <Box width=\"100%\" mt={2} mb={2}>\r\n          <Typography variant=\"h6\">Facility</Typography>\r\n          <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel id=\"facility-label\">Select Facility</InputLabel>\r\n            <Select\r\n              value={facility}\r\n              labelId=\"facility-label\"\r\n              id=\"facility\"\r\n              onChange={handleFacilityChange}\r\n              label=\"Select Facility\"\r\n            >\r\n              {facilities.map((e) => (\r\n                <MenuItem key={e} value={e}>\r\n                  {e}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Box>\r\n\r\n        <Box mt={1}>\r\n          <Typography variant=\"h6\">Date Range</Typography>\r\n          <Calendar\r\n            selectedDates={selectedDates}\r\n            setSelectedDates={setSelectedDates}\r\n          />\r\n        </Box>\r\n\r\n        <FormControl>\r\n          <Typography variant=\"h6\">Days of week</Typography>\r\n          <FormGroup row={true}>\r\n            {days.map((e, i) => (\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    key={e + e}\r\n                    value={i + 1}\r\n                    checked={dayOfWeek.includes(i + 1)}\r\n                    onChange={handleDayChange}\r\n                    id={e}\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label={e}\r\n              />\r\n            ))}\r\n          </FormGroup>\r\n        </FormControl>\r\n\r\n        <Grid container spacing={1} justify=\"flex-start\">\r\n          {dayGroup.map((e) => (\r\n            <Grid item xs={6}>\r\n              <Button\r\n                variant=\"contained\"\r\n                fullWidth={true}\r\n                onClick={handleDayGroupChange}\r\n                className={classes.selectButton}\r\n              >\r\n                {e}\r\n              </Button>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Box>\r\n      <Box flex=\"3 0 0\">\r\n        <Chart setTime={setTime} data={data} chartTitle={chartTitle} />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\nexport default Dashboard;\r\n","import { Card } from \"@material-ui/core\";\r\nimport { blueGrey, orange } from \"@material-ui/core/colors\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { addHours } from \"date-fns\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // border: \"1px solid #EF7C00\",\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  slot: {\r\n    display: \"none\",\r\n    \"&[disabled] ~ label\": {\r\n      color: \"rgb(170, 170, 170)\",\r\n    },\r\n    \"&[booked='true'] ~ label\": {\r\n      backgroundColor: blueGrey[200],\r\n    },\r\n    \"&[booked='true']:checked ~ label\": {\r\n      backgroundColor: orange[400],\r\n    },\r\n    \"&:checked ~ label\": {\r\n      backgroundColor: orange[400],\r\n    },\r\n  },\r\n  slotLabel: {\r\n    display: \"inline-block\",\r\n    boxSizing: \"border-box\",\r\n    margin: 0,\r\n    padding: \"5px 20px\",\r\n    width: \"100%\",\r\n    cursor: \"pointer\",\r\n  },\r\n}));\r\n\r\nconst Slot = ({ date, handleChange, checked, booked, slotsLeft }) => {\r\n  const classes = useStyles();\r\n\r\n  // Disable current day slots whose time has elapsed\r\n  const slotTime = addHours(date, 1); // + 1 since the slot can still be booked in the 1h gap\r\n  const hour = date\r\n    .toLocaleTimeString([], {\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n      hour12: false,\r\n    })\r\n    .replace(\":\", \"\");\r\n  const currentTime = new Date().getTime();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <input\r\n        type=\"checkbox\"\r\n        className={classes.slot}\r\n        id={date}\r\n        date={date}\r\n        onChange={handleChange}\r\n        checked={checked}\r\n        disabled={slotTime <= currentTime}\r\n        booked={booked.toString()}\r\n      />\r\n      <label className={classes.slotLabel} htmlFor={date}>\r\n        <strong>{hour}</strong>\r\n      </label>\r\n      <label\r\n        className={classes.slotLabel}\r\n        htmlFor={date}\r\n      >{`${slotsLeft} Left`}</label>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Slot;\r\n","import Slot from \"./Slot\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  box: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n}));\r\n\r\nconst SlotContainer = ({\r\n  facility,\r\n  assignedDate,\r\n  hours,\r\n  handleChange,\r\n  selectedSlot,\r\n  bookedSlots,\r\n  slotCount,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography variant=\"h5\">{assignedDate.toDateString()}</Typography>\r\n      <Box className={classes.box}>\r\n        {hours.map((hourString) => {\r\n          const hour = parseInt(hourString.slice(0, 2));\r\n          const minute = parseInt(hourString.slice(2, 4));\r\n          const date = new Date(assignedDate);\r\n          date.setHours(hour, minute, 0, 0);\r\n\r\n          const maxCap = 40; // adjust depending on facility\r\n          let slotsLeft = maxCap;\r\n\r\n          // Retrieve number of slots left\r\n          const matchingSlot = slotCount.find(\r\n            (e) => e.date.getTime() === date.getTime()\r\n          );\r\n          if (matchingSlot) {\r\n            slotsLeft = maxCap - matchingSlot.count;\r\n          }\r\n\r\n          return (\r\n            <Slot\r\n              key={date.toLocaleString()}\r\n              date={date}\r\n              handleChange={handleChange}\r\n              checked={\r\n                selectedSlot.date &&\r\n                selectedSlot.date.getTime() === date.getTime()\r\n              }\r\n              booked={\r\n                bookedSlots.filter(\r\n                  (slot) => slot.date.getTime() === date.getTime()\r\n                ).length > 0\r\n              }\r\n              slotsLeft={slotsLeft}\r\n            />\r\n          );\r\n        })}\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SlotContainer;\r\n","import {\r\n  Appointments,\r\n  CurrentTimeIndicator, Scheduler,\r\n  WeekView\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  makeStyles,\r\n  MenuItem,\r\n  Paper,\r\n  TextField,\r\n  Tooltip\r\n} from \"@material-ui/core\";\r\nimport {\r\n  blue,\r\n\r\n  blueGrey,\r\n\r\n  lightBlue, red\r\n} from \"@material-ui/core/colors\";\r\nimport { addHours, addMinutes } from \"date-fns\";\r\nimport addDays from \"date-fns/addDays\";\r\nimport { castArray, invert, mapValues } from \"lodash\";\r\nimport nusmoderator from \"nusmoderator\";\r\nimport qs from \"query-string\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst LESSON_SEP = \",\";\r\nconst LESSON_TYPE_SEP = \":\";\r\nconst LESSON_TYPE_ABBREV = {\r\n  \"Design Lecture\": \"DLEC\",\r\n  Laboratory: \"LAB\",\r\n  Lecture: \"LEC\",\r\n  \"Packaged Lecture\": \"PLEC\",\r\n  \"Packaged Tutorial\": \"PTUT\",\r\n  Recitation: \"REC\",\r\n  \"Sectional Teaching\": \"SEC\",\r\n  \"Seminar-Style Module Class\": \"SEM\",\r\n  Tutorial: \"TUT\",\r\n  \"Tutorial Type 2\": \"TUT2\",\r\n  \"Tutorial Type 3\": \"TUT3\",\r\n  Workshop: \"WS\",\r\n};\r\nconst LESSON_ABBREV_TYPE = invert(LESSON_TYPE_ABBREV);\r\nconst SEMESTER_NUM = {\r\n  \"Semester 1\": 1,\r\n  \"Semester 2\": 2,\r\n  \"Special Term I\": 3,\r\n  \"Special Term II\": 4,\r\n};\r\nconst DAY_OF_WEEK = {\r\n  Sunday: 0,\r\n  Monday: 1,\r\n  Tuesday: 2,\r\n  Wednesday: 3,\r\n  Thursday: 4,\r\n  Friday: 5,\r\n  Saturday: 6,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  container: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    padding: 0,\r\n  },\r\n  title: {\r\n    fontWeight: \"600\",\r\n  },\r\n  timeTableCell: {\r\n    height: \"66px\",\r\n  },\r\n  timeLabel: {\r\n    height: \"66px\",\r\n    lineHeight: \"64px\",\r\n    \"&:first-child\": {\r\n      height: \"33px\",\r\n    },\r\n    \"&:last-child\": {\r\n      height: \"33px\",\r\n    },\r\n  },\r\n  inputContainer: {\r\n    display: \"flex\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  timetableButton: {\r\n    marginRight: theme.spacing(2),\r\n    backgroundColor: lightBlue[600],\r\n    \"&:hover\": {\r\n      backgroundColor: lightBlue[700],\r\n    },\r\n  },\r\n  lessonsButton: {\r\n    marginRight: theme.spacing(2),\r\n    backgroundColor: blueGrey[400],\r\n    \"&:hover\": {\r\n      backgroundColor:  blueGrey[500],\r\n    },\r\n  },\r\n  inputField: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  select: {\r\n    minWidth: 200,\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst AppointmentComponent = ({ style, ...restProps }) => {\r\n  const backgroundColor = restProps.data.isLesson ? blue[400] : red[400];\r\n  return (\r\n    <Appointments.Appointment\r\n      {...restProps}\r\n      style={{ ...style, backgroundColor }}\r\n    />\r\n  );\r\n};\r\n\r\n// Format for appointment content\r\nconst AppointmentContent = ({ data, ...restProps }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Appointments.AppointmentContent {...restProps} data={data}>\r\n      <div className={classes.container}>\r\n        <div className={classes.title}>{data.title}</div>\r\n        <div>{data.lessonType}</div>\r\n        <div>{data.location}</div>\r\n      </div>\r\n    </Appointments.AppointmentContent>\r\n  );\r\n};\r\n\r\nconst TimeTableCell = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <WeekView.TimeTableCell {...props} className={classes.timeTableCell} />\r\n  );\r\n};\r\n\r\nconst TimeLabel = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <WeekView.TimeScaleLabel\r\n      {...props}\r\n      formatDate={(date) =>\r\n        date\r\n          .toLocaleTimeString([], {\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n            hour12: false,\r\n          })\r\n          .replace(\":\", \"\")\r\n      }\r\n      className={classes.timeLabel}\r\n    />\r\n  );\r\n};\r\n\r\nconst TickCell = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <WeekView.TimeScaleTickCell {...props} className={classes.timeTableCell} />\r\n  );\r\n};\r\n\r\nconst Timetable = ({ bookedSlots }) => {\r\n  const [showTimeTable, setShowTimeTable] = useState(false);\r\n  const [showLessons, setShowLessons] = useState(true);\r\n  const [firstDayOfWeek, SetFirstDayOfWeek] = useState(0);\r\n  const [timeTableLink, setTimeTableLink] = useState(\r\n    \"https://nusmods.com/timetable/st-i/share?TBA2101=TUT:2,LEC:1\"\r\n  );\r\n  const [linkError, setLinkError] = useState(false);\r\n  const [appointments, setAppointments] = useState([]);\r\n  const classes = useStyles();\r\n\r\n  const retrieveSemester = () => {\r\n    const semMatch = timeTableLink.match(/sem-[1|2]/);\r\n    const specialMatch = timeTableLink.match(/st-i{2}\\/|st-i\\//);\r\n    if (!semMatch && !specialMatch) {\r\n      setLinkError(true);\r\n    } else if (semMatch) {\r\n      setLinkError(false);\r\n      return parseInt(semMatch[0].slice(4, 5));\r\n    } else if (specialMatch) {\r\n      setLinkError(false);\r\n      const length = specialMatch[0].length;\r\n      // Special match is either \"st-i/\" or \"st-ii/\". They are semesters 3 and 4 respectively.\r\n      return length === 5 ? 3 : 4;\r\n    }\r\n  };\r\n\r\n  // Deserialize timetable to an object, where keys are modules and values are objects of lessons\r\n  const deserializeTimetable = () => {\r\n    const serialized = timeTableLink.match(/\\?\\S*/);\r\n    if (!serialized) {\r\n      setLinkError(true);\r\n    } else {\r\n      setLinkError(false);\r\n      const params = qs.parse(serialized[0]);\r\n      return mapValues(params, parseModuleConfig);\r\n    }\r\n  };\r\n\r\n  // Parsing timetable object where values are strings to values of objects\r\n  const parseModuleConfig = (serialized) => {\r\n    const config = {};\r\n    if (!serialized) return config;\r\n\r\n    castArray(serialized).forEach((serializedModule) => {\r\n      serializedModule.split(LESSON_SEP).forEach((lesson) => {\r\n        const [lessonTypeAbbr, classNo] = lesson.split(LESSON_TYPE_SEP);\r\n        const lessonType = LESSON_ABBREV_TYPE[lessonTypeAbbr];\r\n        // Ignore unparsable/invalid keys\r\n        if (!lessonType) return;\r\n        config[lessonType] = classNo;\r\n      });\r\n    });\r\n\r\n    return config;\r\n  };\r\n\r\n  // Get the Sunday of the current week\r\n  const getSunday = (date) => {\r\n    date = new Date(date);\r\n    const day = date.getDay();\r\n    const diff = date.getDate() - day;\r\n    return new Date(date.setDate(diff));\r\n  };\r\n\r\n  const setTimetable = async (semester, timetable) => {\r\n    const sunday = getSunday(new Date());\r\n    let allLessons = [];\r\n\r\n    // Loop through each module in the timetable\r\n    for (const [moduleName, moduleLessons] of Object.entries(timetable)) {\r\n      await fetch(\r\n        `https://api.nusmods.com/v2/2021-2022/modules/${moduleName}.json`,\r\n        {\r\n          method: \"get\",\r\n        }\r\n      )\r\n        .then((res) => res.json())\r\n        // eslint-disable-next-line\r\n        .then((moduleData) => {\r\n          // Retrieve this semester's module data\r\n          const [currentSemesterData] = moduleData.semesterData.filter(\r\n            (semesterData) => semesterData.semester === semester\r\n          );\r\n\r\n          // If the semester data cannot be found\r\n          if (!currentSemesterData) {\r\n            setLinkError(true);\r\n            return;\r\n          }\r\n\r\n          // Filter lessons for the module which matches the timetable\r\n          let filteredLessons = Object.keys(moduleLessons).flatMap(\r\n            (lessonType) =>\r\n              currentSemesterData.timetable.filter(\r\n                (lesson) =>\r\n                  lesson.classNo === moduleLessons[lessonType] &&\r\n                  lesson.lessonType === lessonType\r\n              )\r\n          );\r\n\r\n          // If alwaysShowLessons is false, hide lessons which are not available for the current week\r\n          if (!showLessons) {\r\n            const acadWeekInfo = nusmoderator.academicCalendar.getAcadWeekInfo(\r\n              new Date()\r\n            );\r\n            const currentSem = SEMESTER_NUM[acadWeekInfo.sem];\r\n            const currentWeek = acadWeekInfo.num;\r\n            filteredLessons = filteredLessons.filter(\r\n              (lesson) =>\r\n                currentSem === semester && lesson.weeks.includes(currentWeek)\r\n            );\r\n          }\r\n\r\n          // Create an array of appointments based on the module\r\n          const lessons = filteredLessons.map((lesson) => {\r\n            const title = moduleName;\r\n\r\n            // Retrieve start and end times\r\n            const startHour = parseInt(lesson.startTime.slice(0, 2));\r\n            const startMinute = parseInt(lesson.startTime.slice(2, 4));\r\n            const endHour = parseInt(lesson.endTime.slice(0, 2));\r\n            const endMinute = parseInt(lesson.endTime.slice(2, 4));\r\n\r\n            // Set start and end dates\r\n            const startDate = addDays(sunday, DAY_OF_WEEK[lesson.day]);\r\n            const endDate = addDays(sunday, DAY_OF_WEEK[lesson.day]);\r\n            startDate.setHours(startHour, startMinute, 0, 0);\r\n            endDate.setHours(endHour, endMinute, 0, 0);\r\n\r\n            const lessonType = `${LESSON_TYPE_ABBREV[lesson.lessonType]} [${\r\n              lesson.classNo\r\n            }]`;\r\n\r\n            const location = lesson.venue;\r\n            const isLesson = true;\r\n            return {\r\n              title,\r\n              startDate,\r\n              endDate,\r\n              lessonType,\r\n              location,\r\n              isLesson,\r\n            };\r\n          });\r\n          allLessons = allLessons.concat(lessons);\r\n        });\r\n    }\r\n    return allLessons;\r\n  };\r\n\r\n  const setBookedSlots = () => {\r\n    bookedSlots = bookedSlots.map((slot) => {\r\n      const title = \"Facility Booking\";\r\n      const startDate = new Date(slot.date);\r\n      const endDate =\r\n        startDate.getMinutes() === 0\r\n          ? addHours(startDate, 1)\r\n          : addMinutes(addHours(startDate, 1), 30);\r\n      const location = slot.facility;\r\n      const isLesson = false;\r\n      return { title, startDate, endDate, location, isLesson };\r\n    });\r\n    return bookedSlots;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const updateTimetable = async () => {\r\n      const semester = retrieveSemester();\r\n      if (!semester) {\r\n        return;\r\n      }\r\n      const deserializedTimetable = deserializeTimetable();\r\n      if (!deserializedTimetable) {\r\n        return;\r\n      }\r\n      const lessons = await setTimetable(semester, deserializedTimetable);\r\n      const slots = await setBookedSlots();\r\n      setAppointments([...lessons, ...slots]);\r\n    };\r\n    updateTimetable();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [timeTableLink, showLessons, bookedSlots]);\r\n\r\n  const handleShowTimetableChange = () => {\r\n    setShowTimeTable(!showTimeTable);\r\n  };\r\n  const handleShowLessons = () => {\r\n    setShowLessons(!showLessons);\r\n  };\r\n  const handleFirstDayOfWeekChange = (e) => SetFirstDayOfWeek(e.target.value);\r\n  const handleLinkChange = (e) => setTimeTableLink(e.target.value);\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box className={classes.inputContainer}>\r\n        <Button\r\n          onClick={handleShowTimetableChange}\r\n          variant=\"contained\"\r\n          className={classes.timetableButton}\r\n        >\r\n          {showTimeTable ? \"Hide Timetable\" : \"Show Timetable\"}\r\n        </Button>\r\n\r\n        {showTimeTable && (\r\n          <Tooltip\r\n            title={\r\n              showLessons\r\n                ? \"Only show lessons which occur during the current academic week\"\r\n                : \"Show lessons regardless of academic week\"\r\n            }\r\n          >\r\n            <Button\r\n              onClick={handleShowLessons}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              className={classes.lessonsButton}\r\n            >\r\n              {showLessons ? \"Hide Lessons\" : \"Always Show Lessons\"}\r\n            </Button>\r\n          </Tooltip>\r\n        )}\r\n\r\n        {showTimeTable && (\r\n          <TextField\r\n            select\r\n            label=\"First Day of Week\"\r\n            variant=\"outlined\"\r\n            className={classes.select}\r\n            onChange={handleFirstDayOfWeekChange}\r\n            value={firstDayOfWeek}\r\n          >\r\n            <MenuItem value={0}>Sunday</MenuItem>\r\n            <MenuItem value={1}>Monday</MenuItem>\r\n          </TextField>\r\n        )}\r\n\r\n        {showTimeTable && (\r\n          <TextField\r\n            error={linkError}\r\n            label={linkError ? \"Error\" : \"NUSMods Share Link\"}\r\n            helperText={linkError ? \"Invalid Link\" : \"\"}\r\n            value={timeTableLink}\r\n            variant=\"outlined\"\r\n            onChange={handleLinkChange}\r\n            className={classes.inputField}\r\n          />\r\n        )}\r\n      </Box>\r\n\r\n      {showTimeTable && (\r\n        <Paper>\r\n          <Scheduler firstDayOfWeek={firstDayOfWeek} data={appointments}>\r\n            <WeekView\r\n              startDayHour={7}\r\n              endDayHour={22}\r\n              cellDuration={60}\r\n              timeTableCellComponent={TimeTableCell}\r\n              timeScaleLabelComponent={TimeLabel}\r\n              timeScaleTickCellComponent={TickCell}\r\n            />\r\n            <Appointments\r\n              appointmentComponent={AppointmentComponent}\r\n              appointmentContentComponent={AppointmentContent}\r\n            />\r\n            <CurrentTimeIndicator />\r\n          </Scheduler>\r\n        </Paper>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Timetable;\r\n","import {\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  Chip,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { blueGrey, lightBlue } from \"@material-ui/core/colors\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { addDays } from \"date-fns\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SlotContainer from \"./SlotContainer\";\r\nimport Timetable from \"./Timetable\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  box: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    width: \"50%\",\r\n  },\r\n  button: {\r\n    padding: theme.spacing(1.5, 2),\r\n    cursor: \"pointer\",\r\n    border: 0,\r\n    borderRadius: 5,\r\n    backgroundColor: lightBlue[600],\r\n    color: \"white\",\r\n    \"&:hover\": {\r\n      backgroundColor: lightBlue[800],\r\n    },\r\n  },\r\n  circularProgress: {\r\n    marginBottom: theme.spacing(1.5),\r\n    color: blueGrey[200],\r\n  },\r\n  paper: {\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  header: {\r\n    paddingTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\n// Weekday and weekend slots for all facilities\r\nconst facilities = [\r\n  {\r\n    name: \"Kent Ridge Swimming Pool\",\r\n    weekdayHours: [\r\n      \"0730\",\r\n      \"0900\",\r\n      \"1000\",\r\n      \"1100\",\r\n      \"1200\",\r\n      \"1300\",\r\n      \"1400\",\r\n      \"1500\",\r\n      \"1600\",\r\n      \"1700\",\r\n      \"1800\",\r\n      \"1900\",\r\n      \"2000\",\r\n    ],\r\n    weekendHours: [\r\n      \"0900\",\r\n      \"1000\",\r\n      \"1100\",\r\n      \"1200\",\r\n      \"1300\",\r\n      \"1400\",\r\n      \"1500\",\r\n      \"1600\",\r\n      \"1700\",\r\n      \"1800\",\r\n    ],\r\n  },\r\n  {\r\n    name: \"University Town Swimming Pool\",\r\n    weekdayHours: [\r\n      \"0730\",\r\n      \"0900\",\r\n      \"1000\",\r\n      \"1100\",\r\n      \"1200\",\r\n      \"1300\",\r\n      \"1400\",\r\n      \"1500\",\r\n      \"1600\",\r\n      \"1700\",\r\n      \"1800\",\r\n      \"1900\",\r\n      \"2000\",\r\n    ],\r\n    weekendHours: [\r\n      \"0900\",\r\n      \"1000\",\r\n      \"1100\",\r\n      \"1200\",\r\n      \"1300\",\r\n      \"1400\",\r\n      \"1500\",\r\n      \"1600\",\r\n      \"1700\",\r\n      \"1800\",\r\n    ],\r\n  },\r\n  {\r\n    name: \"Kent Ridge Gym\",\r\n    weekdayHours: [\r\n      \"1100\",\r\n      \"1200\",\r\n      \"1300\",\r\n      \"1400\",\r\n      \"1500\",\r\n      \"1600\",\r\n      \"1700\",\r\n      \"1800\",\r\n      \"1900\",\r\n    ],\r\n    weekendHours: [],\r\n  },\r\n  {\r\n    name: \"University Sports Centre Gym\",\r\n    weekdayHours: [\r\n      \"0900\",\r\n      \"1000\",\r\n      \"1100\",\r\n      \"1200\",\r\n      \"1300\",\r\n      \"1400\",\r\n      \"1500\",\r\n      \"1600\",\r\n      \"1700\",\r\n      \"1800\",\r\n      \"1900\",\r\n      \"2000\",\r\n    ],\r\n    weekendHours: [\r\n      \"0900\",\r\n      \"1000\",\r\n      \"1100\",\r\n      \"1200\",\r\n      \"1300\",\r\n      \"1400\",\r\n      \"1500\",\r\n      \"1600\",\r\n      \"1700\",\r\n      \"1800\",\r\n    ],\r\n  },\r\n  {\r\n    name: \"University Town Gym\",\r\n    weekdayHours: [\r\n      \"0700\",\r\n      \"0800\",\r\n      \"0900\",\r\n      \"1000\",\r\n      \"1100\",\r\n      \"1200\",\r\n      \"1300\",\r\n      \"1400\",\r\n      \"1500\",\r\n      \"1600\",\r\n      \"1700\",\r\n      \"1800\",\r\n      \"1900\",\r\n      \"2000\",\r\n      \"2100\",\r\n    ],\r\n    weekendHours: [\r\n      \"0700\",\r\n      \"0800\",\r\n      \"0900\",\r\n      \"1000\",\r\n      \"1100\",\r\n      \"1200\",\r\n      \"1300\",\r\n      \"1400\",\r\n      \"1500\",\r\n      \"1600\",\r\n      \"1700\",\r\n      \"1800\",\r\n      \"1900\",\r\n      \"2000\",\r\n      \"2100\",\r\n    ],\r\n  },\r\n  {\r\n    name: \"Wellness Outreach Gym\",\r\n    weekdayHours: [\r\n      \"0700\",\r\n      \"0800\",\r\n      \"0900\",\r\n      \"1000\",\r\n      \"1100\",\r\n      \"1200\",\r\n      \"1300\",\r\n      \"1400\",\r\n      \"1500\",\r\n      \"1600\",\r\n      \"1700\",\r\n      \"1800\",\r\n      \"1900\",\r\n      \"2000\",\r\n      \"2100\",\r\n    ],\r\n    weekendHours: [],\r\n  },\r\n];\r\n\r\nconst Booking = ({ handleAlert }) => {\r\n  const classes = useStyles();\r\n\r\n  const [facility, setFacility] = useState(facilities[0]);\r\n  const [selectedSlot, setSelectedSlot] = useState({});\r\n  const [bookedSlots, setBookedSlots] = useState([]);\r\n  const [allBookedSlots, setAllBookedSlots] = useState([]);\r\n  const [slotCount, setSlotCount] = useState([]);\r\n  const [submitValue, setSubmitValue] = useState(\"Book\");\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [creditsLeft, setCreditsLeft] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  // Date object\r\n  const now = new Date();\r\n  const day = now.getDay();\r\n\r\n  console.log(history.location.state);\r\n\r\n  useEffect(() => {\r\n    async function getCreditsLeft() {\r\n      const url = `${\r\n        window.location.hostname === \"local.nusfitness.com\"\r\n          ? \"http://local.nusfitness.com:5000/\"\r\n          : \"https://salty-reaches-24995.herokuapp.com/\"\r\n      }creditsLeft`;\r\n\r\n      setLoading(true);\r\n\r\n      const res = await fetch(url, {\r\n        method: \"post\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      setCreditsLeft(data.credits);\r\n      setLoading(false);\r\n    }\r\n\r\n    getCreditsLeft();\r\n  }, []);\r\n\r\n  // Changing facility\r\n  const handleFacilityChange = (e) => {\r\n    setFacility(\r\n      facilities.filter((facility) => facility.name === e.target.value)[0]\r\n    );\r\n    setSelectedSlot({});\r\n  };\r\n\r\n  // Changing a slot\r\n  const handleSlotChange = (e) => {\r\n    const checkbox = e.target;\r\n    if (checkbox.checked) {\r\n      setSelectedSlot({\r\n        date: new Date(checkbox.attributes.date.value),\r\n      });\r\n    } else {\r\n      setSelectedSlot({});\r\n    }\r\n\r\n    // Update submit value\r\n    const selectedSlot = {\r\n      date: new Date(checkbox.attributes.date.value),\r\n    };\r\n    Object.keys(selectedSlot).length !== 0 &&\r\n      (bookedSlots.find(\r\n        (slot) => slot.date.getTime() === selectedSlot.date.getTime()\r\n      )\r\n        ? setSubmitValue(\"Cancel\")\r\n        : setSubmitValue(\"Book\"));\r\n  };\r\n\r\n  // Retrieve booked slots\r\n  const getBookedSlots = async () => {\r\n    try {\r\n      const url = `${\r\n        window.location.hostname === \"local.nusfitness.com\"\r\n          ? \"http://local.nusfitness.com:5000/\"\r\n          : \"https://salty-reaches-24995.herokuapp.com/\"\r\n      }bookedSlots`;\r\n\r\n      const res = await fetch(url, {\r\n        method: \"post\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          facility: facility.name,\r\n        }),\r\n        credentials: \"include\",\r\n      });\r\n      const data = await res.json();\r\n      setBookedSlots(\r\n        data.map((e) => ({ facility: e.facility, date: new Date(e.date) }))\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  // Retrieve slots left\r\n  const todayDate = new Date(now.getFullYear(), now.getMonth(), now.getDate());\r\n  const getSlotsLeft = async () => {\r\n    try {\r\n      const url = `${\r\n        window.location.hostname === \"local.nusfitness.com\"\r\n          ? \"http://local.nusfitness.com:5000/\"\r\n          : \"https://salty-reaches-24995.herokuapp.com/\"\r\n      }slots`;\r\n\r\n      const res = await fetch(url, {\r\n        method: \"post\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          facility: facility.name,\r\n          startDate: todayDate,\r\n          endDate: addDays(todayDate, 3),\r\n        }),\r\n        credentials: \"include\",\r\n      });\r\n      const data = await res.json();\r\n      setSlotCount(\r\n        data.map((e) => ({ date: new Date(e._id), count: e.count }))\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  // Update booked slots and slots left upon changing facility\r\n  useEffect(async () => {\r\n    setLoading(true);\r\n    await getBookedSlots();\r\n    await getSlotsLeft();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [facility]);\r\n\r\n  useEffect(() => setLoading(false), [bookedSlots, slotCount]);\r\n\r\n  // Submit booking\r\n  const handleSubmit = useCallback(\r\n    async (e) => {\r\n      e.preventDefault();\r\n      setSelectedSlot({});\r\n\r\n      // Retrieve all booked slots\r\n      const getAllBookedSlots = async () => {\r\n        try {\r\n          const url = `${\r\n            window.location.hostname === \"local.nusfitness.com\"\r\n              ? \"http://local.nusfitness.com:5000/\"\r\n              : \"https://salty-reaches-24995.herokuapp.com/\"\r\n          }bookedSlots`;\r\n\r\n          const res = await fetch(url, {\r\n            method: \"post\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            credentials: \"include\",\r\n          });\r\n          const data = await res.json();\r\n          setAllBookedSlots(\r\n            data.map((e) => ({ facility: e.facility, date: new Date(e.date) }))\r\n          );\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      };\r\n\r\n      if (submitValue === \"Cancel\") {\r\n        try {\r\n          const url = `${\r\n            window.location.hostname === \"local.nusfitness.com\"\r\n              ? \"http://local.nusfitness.com:5000/\"\r\n              : \"https://salty-reaches-24995.herokuapp.com/\"\r\n          }cancel`;\r\n\r\n          setLoading(true);\r\n\r\n          const response = await fetch(url, {\r\n            method: \"post\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n              facility: facility.name,\r\n              ...selectedSlot,\r\n            }),\r\n            credentials: \"include\",\r\n          });\r\n          if (response.status === 401) {\r\n            handleAlert(\r\n              \"You are unauthorised to cancel the slot. Please contact the website's administrator\",\r\n              \"error\"\r\n            );\r\n          } else if (response.status === 403) {\r\n            handleAlert(\r\n              \"Unable to cancel slot because it is within the 2 hour cancellation window.\",\r\n              \"error\"\r\n            );\r\n          } else if (response.status === 404) {\r\n            handleAlert(\r\n              \"Slot cannot be found. Please contact the website's administrator\",\r\n              \"error\"\r\n            );\r\n          }\r\n          const data = await response.json();\r\n          if (data.success) {\r\n            handleAlert(\"Your slot has been cancelled.\", \"success\");\r\n          }\r\n\r\n          await getBookedSlots();\r\n          await getAllBookedSlots();\r\n          await getSlotsLeft();\r\n          setLoading(false);\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      } else {\r\n        try {\r\n          const url = `${\r\n            window.location.hostname === \"local.nusfitness.com\"\r\n              ? \"http://local.nusfitness.com:5000\"\r\n              : \"https://salty-reaches-24995.herokuapp.com\"\r\n          }`;\r\n\r\n          setLoading(true);\r\n\r\n          const res = await fetch(`${url}/updateCredits`, {\r\n            method: \"post\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            credentials: \"include\",\r\n          });\r\n\r\n          const data = await res.json();\r\n\r\n          if (data.success) {\r\n            try {\r\n              const res = await fetch(`${url}/book`, {\r\n                method: \"post\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({\r\n                  facility: facility.name,\r\n                  ...selectedSlot,\r\n                }),\r\n                credentials: \"include\",\r\n              });\r\n              const data = await res.json();\r\n              if (data.success) {\r\n                setCreditsLeft(creditsLeft - 1);\r\n                handleAlert(\"Your slot has been booked!\", \"success\");\r\n              } else {\r\n                handleAlert(\"Slot has been fully booked.\", \"error\");\r\n              }\r\n            } catch (err) {\r\n              console.log(err);\r\n            }\r\n          } else {\r\n            handleAlert(\r\n              \"You have insufficient credits left for this week.\",\r\n              \"error\"\r\n            );\r\n          }\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n\r\n        await getBookedSlots();\r\n        await getAllBookedSlots();\r\n        await getSlotsLeft();\r\n        setLoading(false);\r\n      }\r\n    },\r\n    [submitValue, handleAlert, facility.name, selectedSlot, creditsLeft]\r\n  );\r\n\r\n  // Handle dialog actions\r\n  const handleClickOpen = (e) => {\r\n    e.preventDefault();\r\n    setOpenDialog(true);\r\n  };\r\n  const handleClose = () => setOpenDialog(false);\r\n\r\n  const slotContainers = [];\r\n  for (let i = 0; i < 3; i++) {\r\n    slotContainers[i] = (\r\n      <SlotContainer\r\n        key={addDays(now, i).toLocaleDateString()}\r\n        facility={facility.name}\r\n        assignedDate={addDays(now, i)}\r\n        hours={\r\n          (day + i) % 7 === 0 || (day + i) % 7 === 6\r\n            ? facility.weekendHours\r\n            : facility.weekdayHours\r\n        }\r\n        handleChange={handleSlotChange}\r\n        selectedSlot={selectedSlot}\r\n        bookedSlots={bookedSlots}\r\n        slotCount={slotCount}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Timetable handleAlert={handleAlert} bookedSlots={allBookedSlots} />\r\n\r\n      <Paper className={classes.paper}>\r\n        <Typography variant=\"h4\" align=\"center\" className={classes.header}>\r\n          Book a Facility\r\n        </Typography>\r\n        <Box className={classes.box}>\r\n          <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel id=\"facility-label\">Select Facility</InputLabel>\r\n            <Select\r\n              value={facility.name}\r\n              labelId=\"facility-label\"\r\n              id=\"facility\"\r\n              onChange={handleFacilityChange}\r\n              label=\"Select Facility\"\r\n            >\r\n              {facilities.map((facility, index) => (\r\n                <MenuItem key={index} value={facility.name}>\r\n                  {facility.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Box>\r\n\r\n        {!loading && (\r\n          <Box display=\"flex\" mt={2} justifyContent=\"center\">\r\n            <Chip\r\n              label={\r\n                <Typography>\r\n                  <strong>Remaining credits this week:</strong> {creditsLeft}\r\n                </Typography>\r\n              }\r\n            />\r\n          </Box>\r\n        )}\r\n\r\n        {loading ? (\r\n          <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" mt={3}>\r\n            <CircularProgress className={classes.circularProgress} />\r\n            <Typography variant=\"h5\">Loading bookings page...</Typography>\r\n          </Box>\r\n        ) : (\r\n          <form onSubmit={handleClickOpen}>\r\n            {slotContainers}\r\n            {Object.keys(selectedSlot).length !== 0 && (\r\n              <Box display=\"flex\" justifyContent=\"center\">\r\n                <input\r\n                  type=\"submit\"\r\n                  value={submitValue}\r\n                  className={classes.button}\r\n                />\r\n              </Box>\r\n            )}\r\n          </form>\r\n        )}\r\n      </Paper>\r\n\r\n      <Dialog open={openDialog} onClose={handleClose}>\r\n        <DialogTitle>\r\n          {submitValue === \"Book\"\r\n            ? \"Book selected slot?\"\r\n            : \"Cancel selected slot?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>{`Facility: ${facility.name}`}</DialogContentText>\r\n          <DialogContentText>{`Date: ${\r\n            selectedSlot.date && selectedSlot.date.toDateString()\r\n          }`}</DialogContentText>\r\n          <DialogContentText>{`Hour: ${\r\n            selectedSlot.date &&\r\n            selectedSlot.date\r\n              .toLocaleTimeString([], {\r\n                hour: \"2-digit\",\r\n                minute: \"2-digit\",\r\n                hour12: false,\r\n              })\r\n              .replace(\":\", \"\")\r\n          }`}</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            No\r\n          </Button>\r\n          <Button\r\n            onClick={(e) => {\r\n              handleClose();\r\n              handleSubmit(e);\r\n            }}\r\n            color=\"primary\"\r\n          >\r\n            Yes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Booking;\r\n","import { Box, CircularProgress } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { blueGrey, lightBlue } from \"@material-ui/core/colors\";\r\nimport React from \"react\";\r\nimport Booking from \"./Booking\";\r\nimport Dashboard from \"./Dashboard\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  circularProgress: {\r\n    marginBottom: theme.spacing(1.5),\r\n    color: blueGrey[200],\r\n  },\r\n}));\r\n\r\nconst Home = ({ handleAlert, loggedIn, loading }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {loading ? (\r\n        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" mt={3}>\r\n          <CircularProgress className={classes.circularProgress} />\r\n        </Box>\r\n      ) : loggedIn ? (\r\n        <Box mt={2}>\r\n          <Booking handleAlert={handleAlert} />\r\n        </Box>\r\n      ) : (\r\n        <Dashboard />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useState } from \"react\";\r\nimport { lightBlue } from \"@material-ui/core/colors\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: \"350px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid grey\",\r\n    borderRadius: 5,\r\n    padding: theme.spacing(4),\r\n    margin: \"0 auto\",\r\n    textAlign: \"center\",\r\n    marginTop: theme.spacing(8),\r\n  },\r\n  formControl: {\r\n    display: \"flex\",\r\n    marginBottom: theme.spacing(4),\r\n  },\r\n  helperText: {\r\n    textAlign: \"center\",\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  button: {\r\n    backgroundColor: lightBlue[600],\r\n    \"&:hover\": {\r\n      backgroundColor: lightBlue[800],\r\n    },\r\n  },\r\n  link: {\r\n    color: \"#EF7C00\",\r\n    textDecoration: \"none\",\r\n  },\r\n}));\r\n\r\nconst Login = ({ handleAlert, loggedIn, setLoggedIn }) => {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  let history = useHistory();\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const url = `${\r\n      window.location.hostname === \"local.nusfitness.com\"\r\n        ? \"http://local.nusfitness.com:5000/\"\r\n        : \"https://salty-reaches-24995.herokuapp.com/\"\r\n    }login`;\r\n    fetch(url, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email,\r\n        password,\r\n      }),\r\n      credentials: \"include\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.success) {\r\n          handleAlert(\"Successfully logged in!\", \"success\");\r\n          setLoggedIn(true);\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        handleAlert(\"Failed to login, please try again! :(\", \"error\");\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Typography variant=\"h6\">Login</Typography>\r\n      <form onSubmit={onSubmit}>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel htmlFor=\"email\">Email</InputLabel>\r\n          <Input\r\n            id=\"email\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </FormControl>\r\n\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n          <Input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </FormControl>\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n          onSubmit={onSubmit}\r\n          disableElevation\r\n          className={classes.button}\r\n        >\r\n          Login\r\n        </Button>\r\n      </form>\r\n      <FormHelperText className={classes.helperText}>\r\n        New user? Click{\" \"}\r\n        <Link to=\"/register\" className={classes.link}>\r\n          here\r\n        </Link>{\" \"}\r\n        to register now!\r\n      </FormHelperText>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import AppBar from \"@material-ui/core/AppBar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { lightBlue } from \"@material-ui/core/colors\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  titleLink: {\r\n    textDecoration: \"none\",\r\n    color: \"white\",\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"white\",\r\n  },\r\n  appBar: {\r\n    backgroundColor: lightBlue[700],\r\n  },\r\n}));\r\n\r\nconst Navbar = ({ loggedIn, setLoggedIn }) => {\r\n  const classes = useStyles();\r\n\r\n  const handleLogout = (e) => {\r\n    e.preventDefault();\r\n    const url = `${\r\n      window.location.hostname === \"local.nusfitness.com\"\r\n        ? \"http://local.nusfitness.com:5000/\"\r\n        : \"https://salty-reaches-24995.herokuapp.com/\"\r\n    }logout`;\r\n    fetch(url, {\r\n      credentials: \"include\",\r\n    }).catch((err) => console.log(err));\r\n\r\n    setLoggedIn(false);\r\n  };\r\n  return (\r\n    <nav className={classes.root}>\r\n      <AppBar position=\"static\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            <Link to=\"/\" className={classes.titleLink}>\r\n              NUSFitness\r\n            </Link>\r\n          </Typography>\r\n          {loggedIn ? (\r\n            <Fragment>\r\n              <Button>\r\n                <Link to=\"/\" className={classes.link}>\r\n                  Home\r\n                </Link>\r\n              </Button>\r\n              <Button>\r\n                <Link to=\"/dashboard\" className={classes.link}>\r\n                  Dashboard\r\n                </Link>\r\n              </Button>\r\n              <Button>\r\n                <Link to=\"/profile\" className={classes.link}>\r\n                  Profile\r\n                </Link>\r\n              </Button>\r\n              <Button>\r\n                <Link to=\"/\" onClick={handleLogout} className={classes.link}>\r\n                  Logout\r\n                </Link>\r\n              </Button>\r\n            </Fragment>\r\n          ) : (\r\n            <Fragment>\r\n              <Button>\r\n                <Link to=\"/login\" className={classes.link}>\r\n                  Login\r\n                </Link>\r\n              </Button>\r\n              <Button>\r\n                <Link to=\"/register\" className={classes.link}>\r\n                  Register\r\n                </Link>\r\n              </Button>\r\n            </Fragment>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { lightBlue } from \"@material-ui/core/colors\";\r\nimport React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: \"350px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid grey\",\r\n    borderRadius: 5,\r\n    padding: theme.spacing(4),\r\n    margin: \"0 auto\",\r\n    textAlign: \"center\",\r\n    marginTop: theme.spacing(8),\r\n  },\r\n  formControl: {\r\n    display: \"flex\",\r\n    marginBottom: theme.spacing(4),\r\n  },\r\n  helperText: {\r\n    textAlign: \"center\",\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  button: {\r\n    backgroundColor: lightBlue[600],\r\n    \"&:hover\": {\r\n      backgroundColor: lightBlue[800],\r\n    },\r\n  },\r\n  link: {\r\n    color: \"#EF7C00\",\r\n    textDecoration: \"none\",\r\n  },\r\n}));\r\n\r\nconst Register = ({ handleAlert, loggedIn, setLoggedIn }) => {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  let history = useHistory();\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Has to be an NUS email\r\n    if (!email.includes(\"u.nus.edu\")) {\r\n      handleAlert(\"Please enter a valid NUS email\", \"error\");\r\n      setEmail(\"\");\r\n      setPassword(\"\");\r\n      return;\r\n    }\r\n\r\n    const url = `${\r\n      window.location.hostname === \"local.nusfitness.com\"\r\n        ? \"http://local.nusfitness.com:5000/\"\r\n        : \"https://salty-reaches-24995.herokuapp.com/\"\r\n    }register`;\r\n    fetch(url, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email,\r\n        password,\r\n      }),\r\n      credentials: \"include\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((user) => {\r\n        if (user._id) {\r\n          handleAlert(\r\n            \"Successfully registered! Head to the profile section to sync with telegram!\",\r\n            \"info\",\r\n            7000\r\n          );\r\n          setLoggedIn(true);\r\n          history.push(\"/\");\r\n        } else {\r\n          handleAlert(\"Failed to register, please try again! :(\", \"error\");\r\n          setEmail(\"\");\r\n          setPassword(\"\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Typography variant=\"h6\">Register</Typography>\r\n      <form onSubmit={onSubmit}>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel htmlFor=\"email\">Email</InputLabel>\r\n          <Input\r\n            className={classes.input}\r\n            id=\"email\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </FormControl>\r\n\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n          <Input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </FormControl>\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n          onSubmit={onSubmit}\r\n          disableElevation\r\n          className={classes.button}\r\n        >\r\n          Register\r\n        </Button>\r\n      </form>\r\n      <FormHelperText className={classes.helperText}>\r\n        Already a user? Click{\" \"}\r\n        <Link to=\"/login\" className={classes.link}>\r\n          here\r\n        </Link>{\" \"}\r\n        to login now!\r\n      </FormHelperText>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import TelegramLoginButton from \"react-telegram-login\";\r\n\r\nconst TelegramLogin = () => {\r\n  const handleTelegramResponse = (response) => {\r\n    const url = `${\r\n      window.location.hostname === \"local.nusfitness.com\"\r\n        ? \"http://local.nusfitness.com:5000/\"\r\n        : \"https://salty-reaches-24995.herokuapp.com/\"\r\n    }telegram/login`;\r\n\r\n    fetch(url, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        name: response.first_name,\r\n        chatId: response.id,\r\n      }),\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (!res.success) console.log(res);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <TelegramLoginButton\r\n      dataOnauth={handleTelegramResponse}\r\n      botName=\"NUSFitness_Bot\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default TelegramLogin;\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Chip,\r\n  CircularProgress,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport { blueGrey } from \"@material-ui/core/colors\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useEffect, useMemo, useState } from \"react\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport TelegramLogin from \"./TelegramLogin\";\r\n  \r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(4),\r\n  },\r\n  container: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      flexDirection: \"column\",\r\n      alignItems: \"inherit\"\r\n    },\r\n  },\r\n  tableContainer: {\r\n    width: \"inherit\",\r\n  },\r\n  circularProgress: {\r\n    margin: \"0 auto\",\r\n    color: blueGrey[200]\r\n  },\r\n  profileBox: {\r\n    border: \"1px solid grey\",\r\n    borderRadius: 12,\r\n  },\r\n  avatar: {\r\n    width: 200,\r\n    height: 200,\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(1)\r\n  },\r\n  info: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  chip: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  telegramLogin: {\r\n    marginTop: theme.spacing(2),\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginBottom: theme.spacing(2)\r\n    },\r\n  }\r\n}));\r\n  \r\nconst Profile = ({ handleAlert, loggedIn }) => {\r\n  const classes = useStyles();\r\n  const [slots, setSlots] = useState([]);\r\n  const [loadingSlots, setLoadingSlots] = useState();\r\n  const [loadingCredits, setLoadingCredits] = useState();\r\n  const [loadingProfile, setLoadingProfile] = useState();\r\n  const [profile, setProfile] = useState({});\r\n  const [creditsLeft, setCreditsLeft] = useState();\r\n\r\n  const loading = useMemo(() => loadingSlots || loadingCredits || loadingProfile, [loadingSlots, loadingCredits, loadingProfile]);\r\n\r\n  // Retrieve booked slots\r\n  useEffect(() => {\r\n    const url = `${\r\n      window.location.hostname === \"local.nusfitness.com\"\r\n        ? \"http://local.nusfitness.com:5000/\"\r\n        : \"https://salty-reaches-24995.herokuapp.com/\"\r\n    }bookedSlots`;\r\n\r\n    setLoadingSlots(true);\r\n\r\n    fetch(url, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        setSlots(\r\n          res.map((e) => ({ facility: e.facility, date: new Date(e.date) }))\r\n        )\r\n        setLoadingSlots(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoadingSlots(false);\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  // Retrieve profile info\r\n  useEffect(() => {\r\n    const url = `${\r\n      window.location.hostname === \"local.nusfitness.com\"\r\n        ? \"http://local.nusfitness.com:5000/\"\r\n        : \"https://salty-reaches-24995.herokuapp.com/\"\r\n    }profile`;\r\n\r\n    setLoadingProfile(true);\r\n\r\n    fetch(url, {\r\n      method: \"get\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      credentials: \"include\",\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setProfile(data);\r\n        setLoadingProfile(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoadingProfile(false);\r\n        console.log(err);\r\n      });\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // Get credits left\r\n  useEffect(() => {\r\n    async function getCreditsLeft() {\r\n    const url = `${\r\n      window.location.hostname === \"local.nusfitness.com\"\r\n      ? \"http://local.nusfitness.com:5000/\"\r\n      : \"https://salty-reaches-24995.herokuapp.com/\"\r\n    }creditsLeft`;\r\n\r\n    setLoadingCredits(true);\r\n\r\n    const res = await fetch(url, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      credentials: \"include\",\r\n    });\r\n\r\n    const data = await res.json();\r\n\r\n    setCreditsLeft(data.credits);\r\n    setLoadingCredits(false);\r\n    }\r\n\r\n    getCreditsLeft();\r\n  }, []);\r\n\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      {!loggedIn ? (\r\n        <Dashboard />\r\n      ) : (\r\n        loading\r\n          ? <Box display=\"flex\" mt={1.5} justifyContent=\"center\">\r\n              <CircularProgress className={classes.circularProgress} />\r\n            </Box>\r\n          : <Box display=\"flex\" justifyContent=\"center\" className={classes.container} alignItems=\"flex-start\">\r\n          {/* Profile info and telegram */}\r\n          <Box ml={2} mr={2} flex={3} display=\"flex\" flexDirection=\"column\">\r\n            <Box display=\"flex\" alignItems=\"center\" flexDirection=\"column\" className={classes.profileBox}>\r\n              <Avatar src={`https://robohash.org/${profile.email}?set=set5`} className={classes.avatar} />\r\n              <Typography variant=\"h6\">{profile.email}</Typography>\r\n\r\n              <Box className={classes.info} display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n                  <Typography><strong>Joined:</strong> {new Date(profile.joined).toLocaleDateString()}</Typography>\r\n              </Box>\r\n            </Box>\r\n\r\n            <Chip className={classes.chip} label={<Typography><strong>Remaining credits this week:</strong> {creditsLeft}</Typography>} />\r\n\r\n            <Box display=\"flex\" justifyContent=\"center\" className={classes.telegramLogin}>\r\n              <TelegramLogin />\r\n            </Box>\r\n          </Box>\r\n\r\n          {/* Bookings */}\r\n          <Box ml={2} mr={2} display=\"flex\" flexDirection=\"column\" flex={7}>\r\n            <Box display=\"flex\" justifyContent=\"center\" mb={1}>\r\n                <Typography variant=\"h4\">My Bookings</Typography>\r\n            </Box>\r\n            <TableContainer className={classes.tableContainer} component={Paper}>\r\n            <Table>\r\n              <TableHead>\r\n              <TableRow>\r\n                <TableCell>Facility</TableCell>\r\n                <TableCell align=\"right\">Date</TableCell>\r\n                <TableCell align=\"right\">Time</TableCell>\r\n              </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n              {!loading &&\r\n                slots.map((slot) => (\r\n                <TableRow key={slot.facility}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                  {slot.facility}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                  {slot.date.toDateString()}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                  {slot.date\r\n                    .toLocaleTimeString([], {\r\n                    hour: \"2-digit\",\r\n                    minute: \"2-digit\",\r\n                    hour12: false,\r\n                    })\r\n                    .replace(\":\", \"\")}\r\n                  </TableCell>\r\n                </TableRow>\r\n                ))\r\n              }\r\n              </TableBody>\r\n          </Table>\r\n          </TableContainer>\r\n          {!slots.length &&\r\n            <Box display=\"flex\" mt={1.5} justifyContent=\"center\">\r\n              <span>No bookings found.</span>\r\n            </Box>\r\n          }\r\n        </Box>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n  ","import { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport { lightBlue } from \"@material-ui/core/colors\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Alert from \"./components/Alert\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport Home from \"./components/Home\";\r\nimport Login from \"./components/Login\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Register from \"./components/Register\";\r\nimport Profile from \"./components/Profile\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: lightBlue[700],\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiButton: {\r\n      contained: {\r\n        backgroundColor: \"#337ab7\",\r\n        \"&:hover\": {\r\n          backgroundColor: \"#286090\",\r\n        },\r\n        color: \"white\",\r\n      },\r\n    },\r\n    MuiFormLabel: {\r\n      root: {\r\n        \"&$focused\": {\r\n          color: \"#337ab7\",\r\n        },\r\n      },\r\n    },\r\n    MuiInput: {\r\n      underline: {\r\n        \"&:after\": {\r\n          borderBottom: \"2px solid #337ab7\",\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst App = () => {\r\n  const [alert, setAlert] = useState(null);\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleAlert = (msg, type, time = 3000) => {\r\n    setAlert({ msg, type });\r\n\r\n    setTimeout(() => {\r\n      setAlert(null);\r\n    }, time);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const url = `${\r\n      window.location.hostname === \"local.nusfitness.com\"\r\n        ? \"http://local.nusfitness.com:5000/\"\r\n        : \"https://salty-reaches-24995.herokuapp.com/\"\r\n    }isLoggedIn`;\r\n\r\n    setLoading(true);\r\n\r\n    fetch(url, {\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setLoggedIn(data.authenticated);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setLoggedIn(false);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <div className=\"App\">\r\n          <Navbar loggedIn={loggedIn} setLoggedIn={setLoggedIn} />\r\n          <Alert alert={alert} />\r\n          <Switch>\r\n            <Route exact path=\"/dashboard\">\r\n              <Dashboard />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile handleAlert={handleAlert} loggedIn={loggedIn} />\r\n            </Route>\r\n            <Route exact path=\"/register\">\r\n              <Register\r\n                handleAlert={handleAlert}\r\n                loggedIn={loggedIn}\r\n                setLoggedIn={setLoggedIn}\r\n              />\r\n            </Route>\r\n            <Route exact path=\"/login\">\r\n              <Login\r\n                handleAlert={handleAlert}\r\n                loggedIn={loggedIn}\r\n                setLoggedIn={setLoggedIn}\r\n              />\r\n            </Route>\r\n            <Route exact path=\"/\">\r\n              <Home\r\n                handleAlert={handleAlert}\r\n                loggedIn={loggedIn}\r\n                setLoggedIn={setLoggedIn}\r\n                loading={loading}\r\n              />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </MuiThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}