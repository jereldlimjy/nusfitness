{"version":3,"sources":["components/Alert.js","components/Calendar.js","components/Chart.js","components/Dashboard.js","components/Bookings.js","components/Slot.js","components/SlotContainer.js","components/Booking.js","components/Home.js","components/Login.js","components/Navbar.js","components/Register.js","App.js","index.js"],"names":["Alert","alert","severity","type","msg","Calendar","selectedDates","setSelectedDates","onChange","item","selection","showSelectionPreview","moveRangeOnFirstSelection","months","maxDate","Date","ranges","direction","Chart","setTime","data","tickValues","console","log","theme","VictoryTheme","material","containerComponent","labels","obj","datum","date","toLocaleTimeString","hour","minute","hour12","replace","count","radius","minDomain","x","y","maxDomain","height","width","padding","top","right","bottom","left","label","tickFormat","axisLabelComponent","dy","dependentAxis","scale","useStyles","makeStyles","root","spacing","color","formControl","marginTop","selectButton","Dashboard","classes","facilities","h","m","setHours","useState","facility","setFacility","setData","startDate","endDate","key","dayOfWeek","setDayOfWeek","handleDayChange","e","checkbox","target","checked","parseInt","value","filter","i","handleDayGroupChange","innerText","useEffect","dateRange","addDays","url","window","location","hostname","fetch","method","headers","body","JSON","stringify","indexOf","$gte","$lte","day","then","res","json","map","Box","display","flex","flexDirection","maxWidth","className","Typography","variant","mt","mb","FormControl","InputLabel","id","Select","labelId","MenuItem","FormGroup","row","FormControlLabel","control","Checkbox","includes","Grid","container","justify","xs","Button","fullWidth","onClick","table","minWidth","Booking","handleAlert","loggedIn","slots","setSlots","credentials","catch","err","align","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","slot","scope","toDateString","border","margin","backgroundColor","slotLabel","boxSizing","cursor","Slot","handleChange","booked","slotsLeft","setSlotsLeft","a","slotsCount","fetchSlotsCount","slotTime","addHours","currentTime","getTime","disabled","toString","htmlFor","box","flexWrap","SlotContainer","assignedDate","hours","selectedSlot","bookedSlots","hourString","slice","length","toLocaleString","justifyContent","button","borderRadius","name","weekdayHours","weekendHours","setfacility","setSelectedSlot","setBookedSlots","submitValue","setSubmitValue","open","setOpen","now","getDay","handleSlotChange","attributes","Object","keys","find","handleSubmit","useCallback","preventDefault","response","status","success","handleClose","slotContainers","toLocaleDateString","onSubmit","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","Home","setLoggedIn","textAlign","marginBottom","helperText","link","textDecoration","Login","email","setEmail","password","setPassword","history","useHistory","push","Input","required","disableElevation","FormHelperText","to","flexGrow","title","titleLink","appBar","Navbar","AppBar","position","Toolbar","Register","user","_id","input","createMuiTheme","palette","overrides","MuiButton","contained","MuiFormLabel","MuiInput","underline","borderBottom","App","setAlert","setTimeout","authenticated","basename","process","exact","path","Bookings","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.504bde02.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Alert as MuiAlert } from '@material-ui/lab';\r\n\r\nconst Alert = ({ alert }) => {\r\n\treturn (\r\n\t\talert !== null && (\r\n\t\t\t<MuiAlert severity={alert.type}>{alert.msg}</MuiAlert>\r\n\t\t)\r\n\t)\r\n}\r\n\r\nexport default Alert;","import { DateRange } from \"react-date-range\";\r\n\r\nconst Calendar = ({ selectedDates, setSelectedDates }) => {\r\n  return (\r\n    <DateRange\r\n      onChange={(item) => setSelectedDates([item.selection])}\r\n      showSelectionPreview={true}\r\n      moveRangeOnFirstSelection={false}\r\n      months={1}\r\n      maxDate={new Date()}\r\n      ranges={selectedDates}\r\n      direction=\"horizontal\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","import {\r\n  VictoryLine,\r\n  VictoryChart,\r\n  VictoryAxis,\r\n  VictoryTheme,\r\n  VictoryLabel,\r\n  VictoryVoronoiContainer,\r\n} from \"victory\";\r\n\r\nconst Chart = ({ setTime, data }) => {\r\n  const tickValues = [\r\n    setTime(8, 0),\r\n    setTime(9, 0),\r\n    setTime(10, 0),\r\n    setTime(11, 0),\r\n    setTime(12, 0),\r\n    setTime(13, 0),\r\n    setTime(14, 0),\r\n    setTime(15, 0),\r\n    setTime(16, 0),\r\n    setTime(17, 0),\r\n    setTime(18, 0),\r\n    setTime(19, 0),\r\n    setTime(20, 0),\r\n    setTime(21, 0),\r\n  ];\r\n  console.log(data);\r\n  return (\r\n    <VictoryChart\r\n      theme={VictoryTheme.material}\r\n      containerComponent={\r\n        <VictoryVoronoiContainer\r\n          labels={(obj) =>\r\n            `Time: ${obj.datum.date\r\n              .toLocaleTimeString([], {\r\n                hour: \"2-digit\",\r\n                minute: \"2-digit\",\r\n                hour12: false,\r\n              })\r\n              .replace(\":\", \"\")}, Count: ${obj.datum.count}`\r\n          }\r\n          radius={25}\r\n        />\r\n      }\r\n      minDomain={{ x: setTime(7, 0), y: 0 }}\r\n      maxDomain={{ x: setTime(22, 0), y: 40 }}\r\n      height={250}\r\n      width={900}\r\n      padding={{ top: 0, right: 25, bottom: 0, left: 75 }}\r\n    >\r\n      <VictoryAxis\r\n        label=\"Time\"\r\n        tickValues={tickValues}\r\n        tickFormat={(date) => {\r\n          return new Date(date)\r\n            .toLocaleTimeString([], {\r\n              hour: \"2-digit\",\r\n              minute: \"2-digit\",\r\n              hour12: false,\r\n            })\r\n            .replace(\":\", \"\");\r\n        }}\r\n        axisLabelComponent={<VictoryLabel dy={30} />}\r\n      />\r\n      <VictoryAxis\r\n        dependentAxis\r\n        label={\"Capacity\"}\r\n        axisLabelComponent={<VictoryLabel dy={-30} />}\r\n      />\r\n      <VictoryLine\r\n        data={data}\r\n        x=\"date\"\r\n        y=\"count\"\r\n        scale={{ x: \"time\", y: \"linear\" }}\r\n      ></VictoryLine>\r\n    </VictoryChart>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { addDays } from \"date-fns\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"react-date-range/dist/styles.css\"; // main css file\r\nimport \"react-date-range/dist/theme/default.css\"; // theme css fileimport { useEffect, useState } from \"react\";\r\nimport Calendar from \"./Calendar\";\r\nimport Chart from \"./Chart\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n    \"& .MuiCheckbox-colorPrimary.Mui-checked\": {\r\n      color: \"rgb(61, 145, 255)\",\r\n    },\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(1),\r\n    width: \"100%\",\r\n  },\r\n  selectButton: {},\r\n}));\r\n\r\nconst Dashboard = () => {\r\n  const classes = useStyles();\r\n\r\n  const facilities = [\r\n    \"Kent Ridge Swimming Pool\",\r\n    \"University Town Swimming Pool\",\r\n    \"Kent Ridge Gym\",\r\n    \"University Sports Centre Gym\",\r\n    \"University Town Gym\",\r\n    \"Wellness Outreach Gym\",\r\n  ];\r\n  const days = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n  const dayGroup = [\"SELECT ALL\", \"REMOVE ALL\", \"WEEKDAYS\", \"WEEKENDS\"];\r\n\r\n  // Set hour and minute of today\r\n  const setTime = (h, m) => {\r\n    const date = new Date();\r\n    date.setHours(h, m, 0, 0);\r\n    return date;\r\n  };\r\n\r\n  const [facility, setFacility] = useState(facilities[0]);\r\n  const [data, setData] = useState([]);\r\n  const [selectedDates, setSelectedDates] = useState([\r\n    {\r\n      startDate: setTime(0, 0),\r\n      endDate: setTime(0, 0),\r\n      key: \"selection\",\r\n    },\r\n  ]);\r\n  const [dayOfWeek, setDayOfWeek] = useState([1, 2, 3, 4, 5, 6, 7]);\r\n\r\n  // Changing facility\r\n  const handleFacilityChange = (e) => {\r\n    setFacility(e.target.value);\r\n  };\r\n\r\n  // Changing days\r\n  const handleDayChange = (e) => {\r\n    const checkbox = e.target;\r\n    if (checkbox.checked) {\r\n      setDayOfWeek([...dayOfWeek, parseInt(checkbox.value)]);\r\n    } else {\r\n      setDayOfWeek(dayOfWeek.filter((i) => i !== parseInt(checkbox.value)));\r\n    }\r\n  };\r\n\r\n  // Changing day group\r\n  const handleDayGroupChange = (e) => {\r\n    const value = e.target.innerText;\r\n\r\n    switch (value) {\r\n      case \"SELECT ALL\":\r\n        setDayOfWeek([1, 2, 3, 4, 5, 6, 7]);\r\n        break;\r\n      case \"REMOVE ALL\":\r\n        setDayOfWeek([]);\r\n        break;\r\n      case \"WEEKDAYS\":\r\n        setDayOfWeek([2, 3, 4, 5, 6]);\r\n        break;\r\n      case \"WEEKENDS\":\r\n        setDayOfWeek([1, 7]);\r\n        break;\r\n    }\r\n  };\r\n\r\n  // Fetch data when filters change\r\n  useEffect(() => {\r\n    const [dateRange] = selectedDates;\r\n    const startDate = dateRange.startDate;\r\n    const endDate = addDays(dateRange.endDate, 1); // endDate is 00:00 of end date\r\n\r\n    const url = `${\r\n      window.location.hostname === \"localhost\"\r\n        ? \"http://localhost:5000/\"\r\n        : \"https://salty-reaches-24995.herokuapp.com/\"\r\n    }traffic`;\r\n    fetch(url, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        facility: facilities.indexOf(facility),\r\n        date: { $gte: startDate, $lte: endDate },\r\n        day: dayOfWeek,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) =>\r\n        setData(\r\n          res.map((e) => ({\r\n            date: new Date(e.date),\r\n            count: e.count,\r\n          }))\r\n        )\r\n      );\r\n  }, [facility, selectedDates, dayOfWeek]);\r\n\r\n  return (\r\n    <Box display=\"flex\">\r\n      <Box flex=\"3 0 0\">\r\n        <Chart setTime={setTime} data={data} />\r\n      </Box>\r\n      <Box\r\n        display=\"flex\"\r\n        flex=\"1 1 0\"\r\n        flexDirection=\"column\"\r\n        maxWidth=\"370px\"\r\n        className={classes.root}\r\n      >\r\n        <Typography variant=\"h4\">Filters</Typography>\r\n        <Box width=\"100%\" mt={2} mb={2}>\r\n          <Typography variant=\"h6\">Facility</Typography>\r\n          <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel id=\"facility-label\">Select Facility</InputLabel>\r\n            <Select\r\n              labelId=\"facility-label\"\r\n              id=\"facility\"\r\n              onChange={handleFacilityChange}\r\n              label=\"Select Facility\"\r\n            >\r\n              {facilities.map((e) => (\r\n                <MenuItem key={e} value={e}>\r\n                  {e}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Box>\r\n\r\n        <Box mt={1}>\r\n          <Typography variant=\"h6\">Date Range</Typography>\r\n          <Calendar\r\n            selectedDates={selectedDates}\r\n            setSelectedDates={setSelectedDates}\r\n          />\r\n        </Box>\r\n\r\n        <FormControl>\r\n          <Typography variant=\"h6\">Days of week</Typography>\r\n          <FormGroup row={true}>\r\n            {days.map((e, i) => (\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    key={e + e}\r\n                    value={i + 1}\r\n                    checked={dayOfWeek.includes(i + 1)}\r\n                    onChange={handleDayChange}\r\n                    id={e}\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label={e}\r\n              />\r\n            ))}\r\n          </FormGroup>\r\n        </FormControl>\r\n\r\n        <Grid container spacing={1} justify=\"flex-start\">\r\n          {dayGroup.map((e) => (\r\n            <Grid item xs={6}>\r\n              <Button\r\n                variant=\"contained\"\r\n                fullWidth={true}\r\n                onClick={handleDayGroupChange}\r\n                className={classes.selectButton}\r\n              >\r\n                {e}\r\n              </Button>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\nexport default Dashboard;\r\n","import {\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Fragment, useEffect, useState } from \"react\";\r\nimport Dashboard from \"./Dashboard\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Booking = ({ handleAlert, loggedIn }) => {\r\n  const classes = useStyles();\r\n  const [slots, setSlots] = useState([]);\r\n\r\n  // Retrieve booked slots\r\n  useEffect(() => {\r\n    const url = `${\r\n      window.location.hostname === \"localhost\"\r\n        ? \"http://localhost:5000/\"\r\n        : \"https://salty-reaches-24995.herokuapp.com/\"\r\n    }bookedSlots`;\r\n    fetch(url, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) =>\r\n        setSlots(\r\n          res.map((e) => ({ facility: e.facility, date: new Date(e.date) }))\r\n        )\r\n      )\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n  console.log(slots);\r\n  return (\r\n    <div className={classes.root}>\r\n      {!loggedIn ? (\r\n        <Dashboard />\r\n      ) : (\r\n        <Fragment>\r\n          <Typography variant=\"h4\" align=\"center\">\r\n            View Bookings\r\n          </Typography>\r\n          <TableContainer component={Paper}>\r\n            <Table className={classes.table}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Facility</TableCell>\r\n                  <TableCell align=\"right\">Date</TableCell>\r\n                  <TableCell align=\"right\">Time</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {slots.map((slot) => (\r\n                  <TableRow key={slot.facility}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {slot.facility}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">\r\n                      {slot.date.toDateString()}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">\r\n                      {slot.date\r\n                        .toLocaleTimeString([], {\r\n                          hour: \"2-digit\",\r\n                          minute: \"2-digit\",\r\n                          hour12: false,\r\n                        })\r\n                        .replace(\":\", \"\")}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Booking;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { addHours } from \"date-fns\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    border: \"1px solid #EF7C00\",\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  slot: {\r\n    display: \"none\",\r\n    \"&[disabled] ~ label\": {\r\n      color: \"rgb(170, 170, 170)\",\r\n    },\r\n    \"&[booked='true'] ~ label\": {\r\n      backgroundColor: \"forestgreen\",\r\n    },\r\n    \"&[booked='true']:checked ~ label\": {\r\n      backgroundColor: \"#ef7c00\",\r\n    },\r\n    \"&:checked ~ label\": {\r\n      backgroundColor: \"#ef7c00\",\r\n    },\r\n  },\r\n  slotLabel: {\r\n    display: \"inline-block\",\r\n    boxSizing: \"border-box\",\r\n    margin: 0,\r\n    padding: \"5px 20px\",\r\n    width: \"100%\",\r\n    cursor: \"pointer\",\r\n  },\r\n}));\r\n\r\nconst Slot = ({ facility, date, handleChange, checked, booked }) => {\r\n  const classes = useStyles();\r\n  const [slotsLeft, setSlotsLeft] = useState(20);\r\n  const slotsCap = 20; // TODO: different across facilities\r\n\r\n  useEffect(() => {\r\n    const url = `${\r\n      window.location.hostname === \"localhost\"\r\n        ? \"http://localhost:5000/\"\r\n        : \"https://salty-reaches-24995.herokuapp.com/\"\r\n    }slots`;\r\n\r\n    const fetchSlotsCount = async () => {\r\n      const res = await fetch(url, {\r\n        method: \"post\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          facility,\r\n          date,\r\n        }),\r\n        credentials: \"include\",\r\n      });\r\n      const slotsCount = await res.json();\r\n      setSlotsLeft(slotsCap - slotsCount);\r\n    };\r\n    fetchSlotsCount();\r\n  }, []);\r\n\r\n  // Disable current day slots whose time has elapsed\r\n  const slotTime = addHours(date, 1); // + 1 since the slot can still be booked in the 1h gap\r\n  const hour = date\r\n    .toLocaleTimeString([], {\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n      hour12: false,\r\n    })\r\n    .replace(\":\", \"\");\r\n  const currentTime = new Date().getTime();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <input\r\n        type=\"checkbox\"\r\n        className={classes.slot}\r\n        id={date}\r\n        date={date}\r\n        onChange={handleChange}\r\n        checked={checked}\r\n        disabled={slotsLeft <= 0 || slotTime <= currentTime}\r\n        booked={booked.toString()}\r\n      />\r\n      <label className={classes.slotLabel} htmlFor={date}>\r\n        <strong>{hour}</strong>\r\n      </label>\r\n      <label\r\n        className={classes.slotLabel}\r\n        htmlFor={date}\r\n      >{`${slotsLeft} Left`}</label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slot;\r\n","import Slot from \"./Slot\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  box: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n}));\r\n\r\nconst SlotContainer = ({\r\n  facility,\r\n  assignedDate,\r\n  hours,\r\n  handleChange,\r\n  selectedSlot,\r\n  bookedSlots,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography variant=\"h5\">{assignedDate.toDateString()}</Typography>\r\n      <Box className={classes.box}>\r\n        {hours.map((hourString) => {\r\n          const hour = parseInt(hourString.slice(0, 2));\r\n          const minute = parseInt(hourString.slice(2, 4));\r\n          const date = new Date(assignedDate);\r\n          date.setHours(hour, minute, 0, 0);\r\n\r\n          return (\r\n            <Slot\r\n              key={date.toLocaleString() + facility}\r\n              facility={facility}\r\n              date={date}\r\n              handleChange={handleChange}\r\n              checked={\r\n                selectedSlot.date &&\r\n                selectedSlot.date.getTime() === date.getTime()\r\n              }\r\n              booked={\r\n                bookedSlots.filter(\r\n                  (slot) => slot.date.getTime() === date.getTime()\r\n                ).length > 0\r\n              }\r\n            />\r\n          );\r\n        })}\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SlotContainer;\r\n","import {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport SlotContainer from \"./SlotContainer\";\r\nimport { addDays } from \"date-fns\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  box: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    width: \"50%\",\r\n  },\r\n  button: {\r\n    padding: theme.spacing(1.5, 2),\r\n    cursor: \"pointer\",\r\n    border: 0,\r\n    borderRadius: 5,\r\n    backgroundColor: \"#1E88E5\",\r\n    color: \"white\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(30, 136, 229, 0.9)\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Booking = ({ handleAlert }) => {\r\n  const classes = useStyles();\r\n\r\n  // Weekday and weekend slots for all facilities\r\n  const facilities = [\r\n    {\r\n      name: \"Kent Ridge Swimming Pool\",\r\n      weekdayHours: [\r\n        \"0730\",\r\n        \"0900\",\r\n        \"1000\",\r\n        \"1100\",\r\n        \"1200\",\r\n        \"1300\",\r\n        \"1400\",\r\n        \"1500\",\r\n        \"1600\",\r\n        \"1700\",\r\n        \"1800\",\r\n        \"1900\",\r\n        \"2000\",\r\n      ],\r\n      weekendHours: [\r\n        \"0900\",\r\n        \"1000\",\r\n        \"1100\",\r\n        \"1200\",\r\n        \"1300\",\r\n        \"1400\",\r\n        \"1500\",\r\n        \"1600\",\r\n        \"1700\",\r\n        \"1800\",\r\n      ],\r\n    },\r\n    {\r\n      name: \"University Town Swimming Pool\",\r\n      weekdayHours: [\r\n        \"0730\",\r\n        \"0900\",\r\n        \"1000\",\r\n        \"1100\",\r\n        \"1200\",\r\n        \"1300\",\r\n        \"1400\",\r\n        \"1500\",\r\n        \"1600\",\r\n        \"1700\",\r\n        \"1800\",\r\n        \"1900\",\r\n        \"2000\",\r\n      ],\r\n      weekendHours: [\r\n        \"0900\",\r\n        \"1000\",\r\n        \"1100\",\r\n        \"1200\",\r\n        \"1300\",\r\n        \"1400\",\r\n        \"1500\",\r\n        \"1600\",\r\n        \"1700\",\r\n        \"1800\",\r\n      ],\r\n    },\r\n    {\r\n      name: \"Kent Ridge Gym\",\r\n      weekdayHours: [\r\n        \"1100\",\r\n        \"1200\",\r\n        \"1300\",\r\n        \"1400\",\r\n        \"1500\",\r\n        \"1600\",\r\n        \"1700\",\r\n        \"1800\",\r\n        \"1900\",\r\n      ],\r\n      weekendHours: [],\r\n    },\r\n    {\r\n      name: \"University Sports Centre Gym\",\r\n      weekdayHours: [\r\n        \"0900\",\r\n        \"1000\",\r\n        \"1100\",\r\n        \"1200\",\r\n        \"1300\",\r\n        \"1400\",\r\n        \"1500\",\r\n        \"1600\",\r\n        \"1700\",\r\n        \"1800\",\r\n        \"1900\",\r\n        \"2000\",\r\n      ],\r\n      weekendHours: [\r\n        \"0900\",\r\n        \"1000\",\r\n        \"1100\",\r\n        \"1200\",\r\n        \"1300\",\r\n        \"1400\",\r\n        \"1500\",\r\n        \"1600\",\r\n        \"1700\",\r\n        \"1800\",\r\n      ],\r\n    },\r\n    {\r\n      name: \"University Town Gym\",\r\n      weekdayHours: [\r\n        \"0700\",\r\n        \"0800\",\r\n        \"0900\",\r\n        \"1000\",\r\n        \"1100\",\r\n        \"1200\",\r\n        \"1300\",\r\n        \"1400\",\r\n        \"1500\",\r\n        \"1600\",\r\n        \"1700\",\r\n        \"1800\",\r\n        \"1900\",\r\n        \"2000\",\r\n        \"2100\",\r\n      ],\r\n      weekendHours: [\r\n        \"0700\",\r\n        \"0800\",\r\n        \"0900\",\r\n        \"1000\",\r\n        \"1100\",\r\n        \"1200\",\r\n        \"1300\",\r\n        \"1400\",\r\n        \"1500\",\r\n        \"1600\",\r\n        \"1700\",\r\n        \"1800\",\r\n        \"1900\",\r\n        \"2000\",\r\n        \"2100\",\r\n      ],\r\n    },\r\n    {\r\n      name: \"Wellness Outreach Gym\",\r\n      weekdayHours: [\r\n        \"0700\",\r\n        \"0800\",\r\n        \"0900\",\r\n        \"1000\",\r\n        \"1100\",\r\n        \"1200\",\r\n        \"1300\",\r\n        \"1400\",\r\n        \"1500\",\r\n        \"1600\",\r\n        \"1700\",\r\n        \"1800\",\r\n        \"1900\",\r\n        \"2000\",\r\n        \"2100\",\r\n      ],\r\n      weekendHours: [],\r\n    },\r\n  ];\r\n\r\n  const [facility, setfacility] = useState(facilities[0]);\r\n  const [selectedSlot, setSelectedSlot] = useState({});\r\n  const [bookedSlots, setBookedSlots] = useState([]);\r\n  const [submitValue, setSubmitValue] = useState(\"Book\");\r\n  const [open, setOpen] = useState(false);\r\n\r\n  // Date object\r\n  const now = new Date();\r\n  const day = now.getDay();\r\n\r\n  // Changing facility\r\n  const handleFacilityChange = (e) => {\r\n    setfacility(facilities[e.target.value]);\r\n    setSelectedSlot({});\r\n  };\r\n\r\n  // Changing a slot\r\n  const handleSlotChange = (e) => {\r\n    const checkbox = e.target;\r\n    if (checkbox.checked) {\r\n      setSelectedSlot({\r\n        date: new Date(checkbox.attributes.date.value),\r\n      });\r\n    } else {\r\n      setSelectedSlot({});\r\n    }\r\n\r\n    // Update submit value\r\n    const selectedSlot = {\r\n      date: new Date(checkbox.attributes.date.value),\r\n    };\r\n    Object.keys(selectedSlot).length !== 0 &&\r\n      (bookedSlots.find(\r\n        (slot) => slot.date.getTime() === selectedSlot.date.getTime()\r\n      )\r\n        ? setSubmitValue(\"Cancel\")\r\n        : setSubmitValue(\"Book\"));\r\n  };\r\n\r\n  // Submit booking\r\n  const handleSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (submitValue === \"Cancel\") {\r\n        const url = `${\r\n          window.location.hostname === \"localhost\"\r\n            ? \"http://localhost:5000/\"\r\n            : \"https://salty-reaches-24995.herokuapp.com/\"\r\n        }cancel`;\r\n\r\n        fetch(url, {\r\n          method: \"post\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            facility: facility.name,\r\n            ...selectedSlot,\r\n          }),\r\n          credentials: \"include\",\r\n        })\r\n          .then((response) => {\r\n            if (response.status === 401) {\r\n              handleAlert(\r\n                \"You are unauthorised to cancel the slot. Please contact the website's administrator\",\r\n                \"error\"\r\n              );\r\n            } else if (response.status === 403) {\r\n              handleAlert(\r\n                \"Unable to cancel slot because it is within the 2 hour cancellation window.\",\r\n                \"error\"\r\n              );\r\n            } else if (response.status === 404) {\r\n              handleAlert(\r\n                \"Slot cannot be found. Please contact the website's administrator\",\r\n                \"error\"\r\n              );\r\n            }\r\n            setSelectedSlot({});\r\n            return response.json();\r\n          })\r\n          .then((data) => {\r\n            if (data.success) {\r\n              handleAlert(\"Your slot has been cancelled.\", \"success\");\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      } else {\r\n        const url = `${\r\n          window.location.hostname === \"localhost\"\r\n            ? \"http://localhost:5000/\"\r\n            : \"https://salty-reaches-24995.herokuapp.com/\"\r\n        }book`;\r\n\r\n        fetch(url, {\r\n          method: \"post\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            facility: facility.name,\r\n            ...selectedSlot,\r\n          }),\r\n          credentials: \"include\",\r\n        })\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            if (data.success) {\r\n              handleAlert(\"Your slot has been booked!\", \"success\");\r\n            } else {\r\n              handleAlert(\"Slot has been fully booked.\", \"error\");\r\n            }\r\n            setSelectedSlot({});\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n    },\r\n    [submitValue, handleAlert, facility.name, selectedSlot]\r\n  );\r\n\r\n  // Retrieve booked slots\r\n  useEffect(() => {\r\n    const url = `${\r\n      window.location.hostname === \"localhost\"\r\n        ? \"http://localhost:5000/\"\r\n        : \"https://salty-reaches-24995.herokuapp.com/\"\r\n    }bookedSlots`;\r\n    fetch(url, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        facility: facility.name,\r\n      }),\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) =>\r\n        setBookedSlots(\r\n          res.map((e) => ({ facility: e.facility, date: new Date(e.date) }))\r\n        )\r\n      )\r\n      .catch((err) => console.log(err));\r\n  }, [handleSubmit, facility.name]);\r\n\r\n  // Handle dialog actions\r\n  const handleClickOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const slotContainers = [];\r\n  for (let i = 0; i < 3; i++) {\r\n    slotContainers[i] = (\r\n      <SlotContainer\r\n        key={addDays(now, i).toLocaleDateString()}\r\n        facility={facility.name}\r\n        assignedDate={addDays(now, i)}\r\n        hours={\r\n          (day + i) % 7 === 0 || (day + i) % 7 === 6\r\n            ? facility.weekendHours\r\n            : facility.weekdayHours\r\n        }\r\n        handleChange={handleSlotChange}\r\n        selectedSlot={selectedSlot}\r\n        bookedSlots={bookedSlots}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography variant=\"h4\" align=\"center\">\r\n        Book a Facility\r\n      </Typography>\r\n      <Box className={classes.box}>\r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n          <InputLabel id=\"facility-label\">Select Facility</InputLabel>\r\n          <Select\r\n            labelId=\"facility-label\"\r\n            id=\"facility\"\r\n            onChange={handleFacilityChange}\r\n            label=\"Select Facility\"\r\n          >\r\n            <MenuItem value={0}>{facilities[0].name}</MenuItem>\r\n            <MenuItem value={1}>{facilities[1].name}</MenuItem>\r\n            <MenuItem value={2}>{facilities[2].name}</MenuItem>\r\n            <MenuItem value={3}>{facilities[3].name}</MenuItem>\r\n            <MenuItem value={4}>{facilities[4].name}</MenuItem>\r\n            <MenuItem value={5}>{facilities[5].name}</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Box>\r\n\r\n      <form onSubmit={handleClickOpen}>\r\n        {slotContainers}\r\n        {Object.keys(selectedSlot).length !== 0 && (\r\n          <Box display=\"flex\" justifyContent=\"center\">\r\n            <input\r\n              type=\"submit\"\r\n              value={submitValue}\r\n              className={classes.button}\r\n            />\r\n          </Box>\r\n        )}\r\n      </form>\r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>\r\n          {submitValue === \"Book\"\r\n            ? \"Book selected slot?\"\r\n            : \"Cancel selected slot?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>{`Facility: ${facility.name}`}</DialogContentText>\r\n          <DialogContentText>{`Date: ${\r\n            selectedSlot.date && selectedSlot.date.toDateString()\r\n          }`}</DialogContentText>\r\n          <DialogContentText>{`Hour: ${\r\n            selectedSlot.date &&\r\n            selectedSlot.date\r\n              .toLocaleTimeString([], {\r\n                hour: \"2-digit\",\r\n                minute: \"2-digit\",\r\n                hour12: false,\r\n              })\r\n              .replace(\":\", \"\")\r\n          }`}</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            No\r\n          </Button>\r\n          <Button\r\n            onClick={(e) => {\r\n              handleClose();\r\n              handleSubmit(e);\r\n            }}\r\n            color=\"primary\"\r\n          >\r\n            Yes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Booking;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport Booking from \"./Booking\";\r\nimport Dashboard from \"./Dashboard\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Home = ({ handleAlert, loggedIn, setLoggedIn }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {loggedIn ? <Booking handleAlert={handleAlert} /> : <Dashboard />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: \"350px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid grey\",\r\n    padding: theme.spacing(4),\r\n    margin: \"0 auto\",\r\n    textAlign: \"center\",\r\n    marginTop: theme.spacing(8),\r\n  },\r\n  formControl: {\r\n    display: \"flex\",\r\n    marginBottom: theme.spacing(4),\r\n  },\r\n  helperText: {\r\n    textAlign: \"center\",\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  link: {\r\n    color: \"#EF7C00\",\r\n    textDecoration: \"none\",\r\n  },\r\n}));\r\n\r\nconst Login = ({ handleAlert, loggedIn, setLoggedIn }) => {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  let history = useHistory();\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const url = `${\r\n      window.location.hostname === \"localhost\"\r\n        ? \"http://localhost:5000/\"\r\n        : \"https://salty-reaches-24995.herokuapp.com/\"\r\n    }login`;\r\n    fetch(url, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email,\r\n        password,\r\n      }),\r\n      credentials: \"include\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.success) {\r\n          handleAlert(\"Successfully logged in!\", \"success\");\r\n          setLoggedIn(true);\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        handleAlert(\"Failed to login, please try again! :(\", \"error\");\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Typography variant=\"h6\">Login</Typography>\r\n      <form onSubmit={onSubmit}>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel htmlFor=\"email\">Email</InputLabel>\r\n          <Input\r\n            id=\"email\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </FormControl>\r\n\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n          <Input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </FormControl>\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n          onSubmit={onSubmit}\r\n          disableElevation\r\n        >\r\n          Login\r\n        </Button>\r\n      </form>\r\n      <FormHelperText className={classes.helperText}>\r\n        New user? Click{\" \"}\r\n        <Link to=\"/register\" className={classes.link}>\r\n          here\r\n        </Link>{\" \"}\r\n        to register now!\r\n      </FormHelperText>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import AppBar from \"@material-ui/core/AppBar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  titleLink: {\r\n    textDecoration: \"none\",\r\n    color: \"#EF7C00\",\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"white\",\r\n  },\r\n  appBar: {\r\n    backgroundColor: \"#003D7C\",\r\n  },\r\n}));\r\n\r\nconst Navbar = ({ loggedIn, setLoggedIn }) => {\r\n  const classes = useStyles();\r\n\r\n  const handleLogout = (e) => {\r\n    e.preventDefault();\r\n    const url = `${\r\n      window.location.hostname === \"localhost\"\r\n        ? \"http://localhost:5000/\"\r\n        : \"https://salty-reaches-24995.herokuapp.com/\"\r\n    }logout`;\r\n    fetch(url, {\r\n      credentials: \"include\",\r\n    }).catch((err) => console.log(err));\r\n\r\n    setLoggedIn(false);\r\n  };\r\n  return (\r\n    <nav className={classes.root}>\r\n      <AppBar position=\"static\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            <Link to=\"/\" className={classes.titleLink}>\r\n              NUSFitness\r\n            </Link>\r\n          </Typography>\r\n          {loggedIn ? (\r\n            <Fragment>\r\n              <Button>\r\n                <Link to=\"/dashboard\" className={classes.link}>\r\n                  Dashboard\r\n                </Link>\r\n              </Button>\r\n              <Button>\r\n                <Link to=\"/bookings\" className={classes.link}>\r\n                  Bookings\r\n                </Link>\r\n              </Button>\r\n              <Button>\r\n                <Link to=\"/\" onClick={handleLogout} className={classes.link}>\r\n                  Logout\r\n                </Link>\r\n              </Button>\r\n            </Fragment>\r\n          ) : (\r\n            <Fragment>\r\n              <Button>\r\n                <Link to=\"/login\" className={classes.link}>\r\n                  Login\r\n                </Link>\r\n              </Button>\r\n              <Button>\r\n                <Link to=\"/register\" className={classes.link}>\r\n                  Register\r\n                </Link>\r\n              </Button>\r\n            </Fragment>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: \"350px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid grey\",\r\n    padding: theme.spacing(4),\r\n    margin: \"0 auto\",\r\n    textAlign: \"center\",\r\n    marginTop: theme.spacing(8),\r\n  },\r\n  formControl: {\r\n    display: \"flex\",\r\n    marginBottom: theme.spacing(4),\r\n  },\r\n  helperText: {\r\n    textAlign: \"center\",\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  link: {\r\n    color: \"#EF7C00\",\r\n    textDecoration: \"none\",\r\n  },\r\n}));\r\n\r\nconst Register = ({ handleAlert, loggedIn, setLoggedIn }) => {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  let history = useHistory();\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Has to be an NUS email\r\n    if (!email.includes(\"u.nus.edu\")) {\r\n      handleAlert(\"Please enter a valid NUS email\", \"error\");\r\n      setEmail(\"\");\r\n      setPassword(\"\");\r\n      return;\r\n    }\r\n\r\n    const url = `${\r\n      window.location.hostname === \"localhost\"\r\n        ? \"http://localhost:5000/\"\r\n        : \"https://salty-reaches-24995.herokuapp.com/\"\r\n    }register`;\r\n    fetch(url, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email,\r\n        password,\r\n      }),\r\n      credentials: \"include\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((user) => {\r\n        if (user._id) {\r\n          handleAlert(\"Successfully registered!\", \"success\");\r\n          setLoggedIn(true);\r\n          history.push(\"/\");\r\n        } else {\r\n          handleAlert(\"Failed to register, please try again! :(\", \"error\");\r\n          setEmail(\"\");\r\n          setPassword(\"\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Typography variant=\"h6\">Register</Typography>\r\n      <form onSubmit={onSubmit}>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel htmlFor=\"email\">Email</InputLabel>\r\n          <Input\r\n            className={classes.input}\r\n            id=\"email\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </FormControl>\r\n\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n          <Input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </FormControl>\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n          onSubmit={onSubmit}\r\n          disableElevation\r\n        >\r\n          Register\r\n        </Button>\r\n      </form>\r\n      <FormHelperText className={classes.helperText}>\r\n        Already a user? Click{\" \"}\r\n        <Link to=\"/login\" className={classes.link}>\r\n          here\r\n        </Link>{\" \"}\r\n        to login now!\r\n      </FormHelperText>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Alert from \"./components/Alert\";\r\nimport Bookings from \"./components/Bookings\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport Home from \"./components/Home\";\r\nimport Login from \"./components/Login\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Register from \"./components/Register\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {},\r\n  overrides: {\r\n    MuiButton: {\r\n      contained: {\r\n        backgroundColor: \"#337ab7\",\r\n        \"&:hover\": {\r\n          backgroundColor: \"#286090\",\r\n        },\r\n        color: \"white\",\r\n      },\r\n    },\r\n    MuiFormLabel: {\r\n      root: {\r\n        \"&$focused\": {\r\n          color: \"#337ab7\",\r\n        },\r\n      },\r\n    },\r\n    MuiInput: {\r\n      underline: {\r\n        \"&:after\": {\r\n          borderBottom: \"2px solid #337ab7\",\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst App = () => {\r\n  const [alert, setAlert] = useState(null);\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n\r\n  const handleAlert = (msg, type) => {\r\n    setAlert({ msg, type });\r\n\r\n    setTimeout(() => {\r\n      setAlert(null);\r\n    }, 3000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const url = `${\r\n      window.location.hostname === \"localhost\"\r\n        ? \"http://localhost:5000/\"\r\n        : \"https://salty-reaches-24995.herokuapp.com/\"\r\n    }isLoggedIn`;\r\n    fetch(url, {\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setLoggedIn(data.authenticated);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setLoggedIn(false);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <div className=\"App\">\r\n          <Navbar loggedIn={loggedIn} setLoggedIn={setLoggedIn} />\r\n          <Alert alert={alert} />\r\n          <Switch>\r\n            <Route exact path=\"/dashboard\">\r\n              <Dashboard />\r\n            </Route>\r\n            <Route exact path=\"/bookings\">\r\n              <Bookings handleAlert={handleAlert} loggedIn={loggedIn} />\r\n            </Route>\r\n            <Route exact path=\"/register\">\r\n              <Register\r\n                handleAlert={handleAlert}\r\n                loggedIn={loggedIn}\r\n                setLoggedIn={setLoggedIn}\r\n              />\r\n            </Route>\r\n            <Route exact path=\"/login\">\r\n              <Login\r\n                handleAlert={handleAlert}\r\n                loggedIn={loggedIn}\r\n                setLoggedIn={setLoggedIn}\r\n              />\r\n            </Route>\r\n            <Route exact path=\"/\">\r\n              <Home\r\n                handleAlert={handleAlert}\r\n                loggedIn={loggedIn}\r\n                setLoggedIn={setLoggedIn}\r\n              />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </MuiThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}