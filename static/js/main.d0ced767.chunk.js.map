{"version":3,"sources":["components/Alert.js","components/Calendar.js","components/Chart.js","components/Dashboard.js","components/Slot.js","components/SlotContainer.js","components/Timetable.js","components/Booking.js","components/Home.js","components/Login.js","components/Navbar.js","components/Register.js","components/TelegramLogin.js","components/Profile.js","App.js","index.js"],"names":["Alert","alert","severity","type","msg","Calendar","selectedDates","setSelectedDates","onChange","item","selection","showSelectionPreview","moveRangeOnFirstSelection","months","maxDate","Date","ranges","direction","Chart","setTime","data","chartTitle","tickValues","theme","VictoryTheme","material","containerComponent","labels","obj","datum","date","toLocaleTimeString","hour","minute","hour12","replace","count","radius","minDomain","x","y","maxDomain","height","width","padding","top","right","bottom","left","text","textAnchor","style","fontSize","label","tickFormat","axisLabelComponent","dy","dependentAxis","scale","useStyles","makeStyles","root","spacing","color","formControl","marginTop","selectButton","backgroundColor","Dashboard","classes","facilities","h","m","setHours","useState","facility","setFacility","setData","startDate","endDate","key","dayOfWeek","setDayOfWeek","setChartTitle","handleDayChange","e","checkbox","target","checked","parseInt","value","filter","i","handleDayGroupChange","innerText","useEffect","dateRange","addDays","url","window","location","hostname","fetch","method","headers","body","JSON","stringify","indexOf","$gte","$lte","day","credentials","then","res","json","map","toDateString","Box","display","className","flex","flexDirection","maxWidth","Typography","variant","mt","mb","FormControl","InputLabel","id","Select","labelId","MenuItem","FormGroup","row","FormControlLabel","control","Checkbox","includes","Grid","container","justify","xs","Button","fullWidth","onClick","margin","slot","orange","blueGrey","slotLabel","boxSizing","cursor","Slot","handleChange","booked","slotsLeft","slotTime","addHours","currentTime","getTime","Card","disabled","toString","htmlFor","box","flexWrap","SlotContainer","assignedDate","hours","selectedSlot","bookedSlots","slotCount","hourString","slice","matchingSlot","find","length","toLocaleString","LESSON_TYPE_ABBREV","Laboratory","Lecture","Recitation","Tutorial","Workshop","LESSON_ABBREV_TYPE","invert","SEMESTER_NUM","DAY_OF_WEEK","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","title","fontWeight","timeTableCell","timeLabel","lineHeight","inputContainer","marginBottom","timetableButton","marginRight","lightBlue","lessonsButton","inputField","select","minWidth","AppointmentComponent","restProps","isLesson","blue","red","Appointment","AppointmentContent","lessonType","TimeTableCell","props","TimeLabel","TimeScaleLabel","formatDate","TickCell","TimeScaleTickCell","Timetable","showTimeTable","setShowTimeTable","showLessons","setShowLessons","firstDayOfWeek","SetFirstDayOfWeek","timeTableLink","setTimeTableLink","linkError","setLinkError","appointments","setAppointments","retrieveSemester","semMatch","match","specialMatch","deserializeTimetable","serialized","params","qs","parse","mapValues","parseModuleConfig","config","castArray","forEach","serializedModule","split","lesson","lessonTypeAbbr","classNo","getSunday","getDay","diff","getDate","setDate","setTimetable","semester","timetable","a","sunday","allLessons","moduleName","moduleLessons","moduleData","semesterData","currentSemesterData","filteredLessons","Object","keys","flatMap","acadWeekInfo","nusmoderator","academicCalendar","getAcadWeekInfo","currentSem","sem","currentWeek","num","weeks","lessons","startHour","startTime","startMinute","endHour","endTime","endMinute","venue","concat","entries","deserializedTimetable","getMinutes","addMinutes","slots","updateTimetable","Tooltip","TextField","error","helperText","Paper","startDayHour","endDayHour","cellDuration","timeTableCellComponent","timeScaleLabelComponent","timeScaleTickCellComponent","appointmentComponent","appointmentContentComponent","justifyContent","button","border","borderRadius","circularProgress","paper","marginLeft","paddingBottom","header","paddingTop","name","weekdayHours","weekendHours","Booking","handleAlert","setSelectedSlot","setBookedSlots","allBookedSlots","setAllBookedSlots","setSlotCount","submitValue","setSubmitValue","openDialog","setOpenDialog","creditsLeft","setCreditsLeft","loading","setLoading","history","useHistory","now","console","log","state","credits","getCreditsLeft","handleSlotChange","attributes","handleSubmit","useCallback","preventDefault","response","status","success","catch","err","todayDate","getFullYear","getMonth","_id","handleClose","slotContainers","toLocaleDateString","align","index","Chip","alignItems","CircularProgress","onSubmit","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","Home","loggedIn","setLoggedIn","textAlign","link","textDecoration","Login","email","setEmail","password","setPassword","push","Input","required","disableElevation","FormHelperText","to","flexGrow","titleLink","appBar","Navbar","AppBar","position","Toolbar","Register","user","input","TelegramLogin","dataOnauth","first_name","chatId","botName","breakpoints","down","tableContainer","profileBox","avatar","info","chip","telegramLogin","Profile","setSlots","profile","setProfile","ml","mr","Avatar","src","joined","TableContainer","component","Table","TableHead","TableRow","TableCell","TableBody","scope","createMuiTheme","palette","primary","main","overrides","MuiButton","contained","MuiFormLabel","MuiInput","underline","borderBottom","App","setAlert","setTimeout","authenticated","basename","process","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0ced767.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Alert as MuiAlert } from '@material-ui/lab';\r\n\r\nconst Alert = ({ alert }) => {\r\n\treturn (\r\n\t\talert !== null && (\r\n\t\t\t<MuiAlert severity={alert.type}>{alert.msg}</MuiAlert>\r\n\t\t)\r\n\t)\r\n}\r\n\r\nexport default Alert;","import { DateRange } from \"react-date-range\";\r\n\r\nconst Calendar = ({ selectedDates, setSelectedDates }) => {\r\n  return (\r\n    <DateRange\r\n      onChange={(item) => setSelectedDates([item.selection])}\r\n      showSelectionPreview={true}\r\n      moveRangeOnFirstSelection={false}\r\n      months={1}\r\n      maxDate={new Date()}\r\n      ranges={selectedDates}\r\n      direction=\"horizontal\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","import {\r\n  VictoryLine,\r\n  VictoryChart,\r\n  VictoryAxis,\r\n  VictoryTheme,\r\n  VictoryLabel,\r\n  VictoryVoronoiContainer,\r\n} from \"victory\";\r\n\r\nconst Chart = ({ setTime, data, chartTitle }) => {\r\n  const tickValues = [\r\n    setTime(8, 0),\r\n    setTime(9, 0),\r\n    setTime(10, 0),\r\n    setTime(11, 0),\r\n    setTime(12, 0),\r\n    setTime(13, 0),\r\n    setTime(14, 0),\r\n    setTime(15, 0),\r\n    setTime(16, 0),\r\n    setTime(17, 0),\r\n    setTime(18, 0),\r\n    setTime(19, 0),\r\n    setTime(20, 0),\r\n    setTime(21, 0),\r\n  ];\r\n\r\n  return (\r\n    <VictoryChart\r\n      theme={VictoryTheme.material}\r\n      containerComponent={\r\n        <VictoryVoronoiContainer\r\n          labels={(obj) =>\r\n            `Time: ${obj.datum.date\r\n              .toLocaleTimeString([], {\r\n                hour: \"2-digit\",\r\n                minute: \"2-digit\",\r\n                hour12: false,\r\n              })\r\n              .replace(\":\", \"\")}, Count: ${obj.datum.count}`\r\n          }\r\n          radius={25}\r\n        />\r\n      }\r\n      minDomain={{ x: setTime(7, 0), y: 0 }}\r\n      maxDomain={{ x: setTime(22, 0), y: 40 }}\r\n      height={250}\r\n      width={900}\r\n      padding={{ top: 0, right: 25, bottom: 0, left: 50 }}\r\n    >\r\n      <VictoryLabel\r\n        text={chartTitle}\r\n        x={450}\r\n        y={-5}\r\n        textAnchor=\"middle\"\r\n        style={{ fontSize: 18 }}\r\n      />\r\n      <VictoryAxis\r\n        label=\"Time\"\r\n        tickValues={tickValues}\r\n        tickFormat={(date) => {\r\n          return new Date(date)\r\n            .toLocaleTimeString([], {\r\n              hour: \"2-digit\",\r\n              minute: \"2-digit\",\r\n              hour12: false,\r\n            })\r\n            .replace(\":\", \"\");\r\n        }}\r\n        axisLabelComponent={<VictoryLabel dy={30} />}\r\n      />\r\n      <VictoryAxis\r\n        dependentAxis\r\n        label={\"Capacity\"}\r\n        axisLabelComponent={<VictoryLabel dy={-30} />}\r\n      />\r\n      <VictoryLine\r\n        data={data}\r\n        x=\"date\"\r\n        y=\"count\"\r\n        scale={{ x: \"time\", y: \"linear\" }}\r\n      ></VictoryLine>\r\n    </VictoryChart>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { blueGrey, lightBlue } from \"@material-ui/core/colors\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { addDays } from \"date-fns\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"react-date-range/dist/styles.css\"; // main css file\r\nimport \"react-date-range/dist/theme/default.css\"; // theme css fileimport { useEffect, useState } from \"react\";\r\nimport Calendar from \"./Calendar\";\r\nimport Chart from \"./Chart\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n    \"& .MuiCheckbox-colorPrimary.Mui-checked\": {\r\n      color: \"rgb(61, 145, 255)\",\r\n    },\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(1),\r\n    width: \"100%\",\r\n  },\r\n  selectButton: {\r\n    backgroundColor: \"rgb(61, 145, 255)\",\r\n  },\r\n}));\r\n\r\nconst Dashboard = () => {\r\n  const classes = useStyles();\r\n\r\n  const facilities = [\r\n    \"Kent Ridge Swimming Pool\",\r\n    \"University Town Swimming Pool\",\r\n    \"Kent Ridge Gym\",\r\n    \"University Sports Centre Gym\",\r\n    \"University Town Gym\",\r\n    \"Wellness Outreach Gym\",\r\n  ];\r\n  const days = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n  const dayGroup = [\"SELECT ALL\", \"REMOVE ALL\", \"WEEKDAYS\", \"WEEKENDS\"];\r\n\r\n  // Set time of current date\r\n  const setTime = (h, m) => {\r\n    const date = new Date();\r\n    date.setHours(h, m, 0, 0);\r\n    return date;\r\n  };\r\n\r\n  const [facility, setFacility] = useState(facilities[0]);\r\n  const [data, setData] = useState([]);\r\n  const [selectedDates, setSelectedDates] = useState([\r\n    {\r\n      startDate: setTime(0, 0),\r\n      endDate: setTime(0, 0),\r\n      key: \"selection\",\r\n    },\r\n  ]);\r\n  const [dayOfWeek, setDayOfWeek] = useState([1, 2, 3, 4, 5, 6, 7]);\r\n  const [chartTitle, setChartTitle] = useState(\"\");\r\n\r\n  // Changing facility\r\n  const handleFacilityChange = (e) => {\r\n    setFacility(e.target.value);\r\n  };\r\n\r\n  // Changing days\r\n  const handleDayChange = (e) => {\r\n    const checkbox = e.target;\r\n    if (checkbox.checked) {\r\n      setDayOfWeek([...dayOfWeek, parseInt(checkbox.value)]);\r\n    } else {\r\n      setDayOfWeek(dayOfWeek.filter((i) => i !== parseInt(checkbox.value)));\r\n    }\r\n  };\r\n\r\n  // Changing day group\r\n  const handleDayGroupChange = (e) => {\r\n    const value = e.target.innerText;\r\n\r\n    switch (value) {\r\n      case \"SELECT ALL\":\r\n        setDayOfWeek([1, 2, 3, 4, 5, 6, 7]);\r\n        break;\r\n      case \"REMOVE ALL\":\r\n        setDayOfWeek([]);\r\n        break;\r\n      case \"WEEKDAYS\":\r\n        setDayOfWeek([2, 3, 4, 5, 6]);\r\n        break;\r\n      case \"WEEKENDS\":\r\n        setDayOfWeek([1, 7]);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  // Fetch data when filters change\r\n  useEffect(() => {\r\n    const [dateRange] = selectedDates;\r\n    const startDate = dateRange.startDate;\r\n    const endDate = addDays(dateRange.endDate, 1); // endDate is 00:00 of end date\r\n\r\n    const url = `${\r\n      window.location.hostname === \"local.nusfitness.com\"\r\n        ? \"http://local.nusfitness.com:5000/\"\r\n        : \"https://salty-reaches-24995.herokuapp.com/\"\r\n    }traffic`;\r\n    fetch(url, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        facility: facilities.indexOf(facility),\r\n        date: { $gte: startDate, $lte: endDate },\r\n        day: dayOfWeek,\r\n      }),\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) =>\r\n        setData(\r\n          res.map((e) => ({\r\n            date: new Date(e.date),\r\n            count: e.count,\r\n          }))\r\n        )\r\n      );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [facility, selectedDates, dayOfWeek]);\r\n\r\n  useEffect(() => {\r\n    // console.log(facility);\r\n    // console.log(selectedDates);\r\n    // console.log(selectedDates[0].startDate.toDateString());\r\n    setChartTitle(\r\n      `${facility}\\n${selectedDates[0].startDate.toDateString()} to ${selectedDates[0].endDate.toDateString()} `\r\n    );\r\n  }, [facility, selectedDates, dayOfWeek]);\r\n\r\n  return (\r\n    <Box display=\"flex\" className={classes.root}>\r\n      <Box\r\n        display=\"flex\"\r\n        flex=\"1 1 0\"\r\n        flexDirection=\"column\"\r\n        maxWidth=\"370px\"\r\n        className={classes.root}\r\n      >\r\n        <Typography variant=\"h4\">Filters</Typography>\r\n        <Box width=\"100%\" mt={2} mb={2}>\r\n          <Typography variant=\"h6\">Facility</Typography>\r\n          <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel id=\"facility-label\">Select Facility</InputLabel>\r\n            <Select\r\n              value={facility}\r\n              labelId=\"facility-label\"\r\n              id=\"facility\"\r\n              onChange={handleFacilityChange}\r\n              label=\"Select Facility\"\r\n            >\r\n              {facilities.map((e) => (\r\n                <MenuItem key={e} value={e}>\r\n                  {e}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Box>\r\n\r\n        <Box mt={1}>\r\n          <Typography variant=\"h6\">Date Range</Typography>\r\n          <Calendar\r\n            selectedDates={selectedDates}\r\n            setSelectedDates={setSelectedDates}\r\n          />\r\n        </Box>\r\n\r\n        <FormControl>\r\n          <Typography variant=\"h6\">Days of week</Typography>\r\n          <FormGroup row={true}>\r\n            {days.map((e, i) => (\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    key={e + e}\r\n                    value={i + 1}\r\n                    checked={dayOfWeek.includes(i + 1)}\r\n                    onChange={handleDayChange}\r\n                    id={e}\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label={e}\r\n              />\r\n            ))}\r\n          </FormGroup>\r\n        </FormControl>\r\n\r\n        <Grid container spacing={1} justify=\"flex-start\">\r\n          {dayGroup.map((e) => (\r\n            <Grid item xs={6}>\r\n              <Button\r\n                variant=\"contained\"\r\n                fullWidth={true}\r\n                onClick={handleDayGroupChange}\r\n                className={classes.selectButton}\r\n              >\r\n                {e}\r\n              </Button>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Box>\r\n      <Box flex=\"3 0 0\">\r\n        <Chart setTime={setTime} data={data} />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\nexport default Dashboard;\r\n","import { Card } from \"@material-ui/core\";\r\nimport { blueGrey, orange } from \"@material-ui/core/colors\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { addHours } from \"date-fns\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // border: \"1px solid #EF7C00\",\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  slot: {\r\n    display: \"none\",\r\n    \"&[disabled] ~ label\": {\r\n      color: \"rgb(170, 170, 170)\",\r\n    },\r\n    \"&[booked='true'] ~ label\": {\r\n      backgroundColor: orange[400],\r\n    },\r\n    \"&[booked='true']:checked ~ label\": {\r\n      backgroundColor: blueGrey[400],\r\n    },\r\n    \"&:checked ~ label\": {\r\n      backgroundColor: blueGrey[200],\r\n    },\r\n  },\r\n  slotLabel: {\r\n    display: \"inline-block\",\r\n    boxSizing: \"border-box\",\r\n    margin: 0,\r\n    padding: \"5px 20px\",\r\n    width: \"100%\",\r\n    cursor: \"pointer\",\r\n  },\r\n}));\r\n\r\nconst Slot = ({ date, handleChange, checked, booked, slotsLeft }) => {\r\n  const classes = useStyles();\r\n\r\n  // Disable current day slots whose time has elapsed\r\n  const slotTime = addHours(date, 1); // + 1 since the slot can still be booked in the 1h gap\r\n  const hour = date\r\n    .toLocaleTimeString([], {\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n      hour12: false,\r\n    })\r\n    .replace(\":\", \"\");\r\n  const currentTime = new Date().getTime();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <input\r\n        type=\"checkbox\"\r\n        className={classes.slot}\r\n        id={date}\r\n        date={date}\r\n        onChange={handleChange}\r\n        checked={checked}\r\n        disabled={slotTime <= currentTime}\r\n        booked={booked.toString()}\r\n      />\r\n      <label className={classes.slotLabel} htmlFor={date}>\r\n        <strong>{hour}</strong>\r\n      </label>\r\n      <label\r\n        className={classes.slotLabel}\r\n        htmlFor={date}\r\n      >{`${slotsLeft} Left`}</label>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Slot;\r\n","import Slot from \"./Slot\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  box: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n}));\r\n\r\nconst SlotContainer = ({\r\n  facility,\r\n  assignedDate,\r\n  hours,\r\n  handleChange,\r\n  selectedSlot,\r\n  bookedSlots,\r\n  slotCount,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography variant=\"h5\">{assignedDate.toDateString()}</Typography>\r\n      <Box className={classes.box}>\r\n        {hours.map((hourString) => {\r\n          const hour = parseInt(hourString.slice(0, 2));\r\n          const minute = parseInt(hourString.slice(2, 4));\r\n          const date = new Date(assignedDate);\r\n          date.setHours(hour, minute, 0, 0);\r\n\r\n          const maxCap = 40; // adjust depending on facility\r\n          let slotsLeft = maxCap;\r\n\r\n          // Retrieve number of slots left\r\n          const matchingSlot = slotCount.find(\r\n            (e) => e.date.getTime() === date.getTime()\r\n          );\r\n          if (matchingSlot) {\r\n            slotsLeft = maxCap - matchingSlot.count;\r\n          }\r\n\r\n          return (\r\n            <Slot\r\n              key={date.toLocaleString()}\r\n              date={date}\r\n              handleChange={handleChange}\r\n              checked={\r\n                selectedSlot.date &&\r\n                selectedSlot.date.getTime() === date.getTime()\r\n              }\r\n              booked={\r\n                bookedSlots.filter(\r\n                  (slot) => slot.date.getTime() === date.getTime()\r\n                ).length > 0\r\n              }\r\n              slotsLeft={slotsLeft}\r\n            />\r\n          );\r\n        })}\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SlotContainer;\r\n","import {\r\n  Appointments,\r\n  CurrentTimeIndicator, Scheduler,\r\n  WeekView\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  makeStyles,\r\n  MenuItem,\r\n  Paper,\r\n  TextField,\r\n  Tooltip\r\n} from \"@material-ui/core\";\r\nimport {\r\n  blue,\r\n\r\n  blueGrey,\r\n\r\n  lightBlue, red\r\n} from \"@material-ui/core/colors\";\r\nimport { addHours, addMinutes } from \"date-fns\";\r\nimport addDays from \"date-fns/addDays\";\r\nimport { castArray, invert, mapValues } from \"lodash\";\r\nimport nusmoderator from \"nusmoderator\";\r\nimport qs from \"query-string\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst LESSON_SEP = \",\";\r\nconst LESSON_TYPE_SEP = \":\";\r\nconst LESSON_TYPE_ABBREV = {\r\n  \"Design Lecture\": \"DLEC\",\r\n  Laboratory: \"LAB\",\r\n  Lecture: \"LEC\",\r\n  \"Packaged Lecture\": \"PLEC\",\r\n  \"Packaged Tutorial\": \"PTUT\",\r\n  Recitation: \"REC\",\r\n  \"Sectional Teaching\": \"SEC\",\r\n  \"Seminar-Style Module Class\": \"SEM\",\r\n  Tutorial: \"TUT\",\r\n  \"Tutorial Type 2\": \"TUT2\",\r\n  \"Tutorial Type 3\": \"TUT3\",\r\n  Workshop: \"WS\",\r\n};\r\nconst LESSON_ABBREV_TYPE = invert(LESSON_TYPE_ABBREV);\r\nconst SEMESTER_NUM = {\r\n  \"Semester 1\": 1,\r\n  \"Semester 2\": 2,\r\n  \"Special Term I\": 3,\r\n  \"Special Term II\": 4,\r\n};\r\nconst DAY_OF_WEEK = {\r\n  Sunday: 0,\r\n  Monday: 1,\r\n  Tuesday: 2,\r\n  Wednesday: 3,\r\n  Thursday: 4,\r\n  Friday: 5,\r\n  Saturday: 6,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  container: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    padding: 0,\r\n  },\r\n  title: {\r\n    fontWeight: \"600\",\r\n  },\r\n  timeTableCell: {\r\n    height: \"66px\",\r\n  },\r\n  timeLabel: {\r\n    height: \"66px\",\r\n    lineHeight: \"64px\",\r\n    \"&:first-child\": {\r\n      height: \"33px\",\r\n    },\r\n    \"&:last-child\": {\r\n      height: \"33px\",\r\n    },\r\n  },\r\n  inputContainer: {\r\n    display: \"flex\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  timetableButton: {\r\n    marginRight: theme.spacing(2),\r\n    backgroundColor: lightBlue[600],\r\n    \"&:hover\": {\r\n      backgroundColor: lightBlue[700],\r\n    },\r\n  },\r\n  lessonsButton: {\r\n    marginRight: theme.spacing(2),\r\n    backgroundColor: blueGrey[400],\r\n    \"&:hover\": {\r\n      backgroundColor:  blueGrey[500],\r\n    },\r\n  },\r\n  inputField: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  select: {\r\n    minWidth: 200,\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst AppointmentComponent = ({ style, ...restProps }) => {\r\n  const backgroundColor = restProps.data.isLesson ? blue[400] : red[400];\r\n  return (\r\n    <Appointments.Appointment\r\n      {...restProps}\r\n      style={{ ...style, backgroundColor }}\r\n    />\r\n  );\r\n};\r\n\r\n// Format for appointment content\r\nconst AppointmentContent = ({ data, ...restProps }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Appointments.AppointmentContent {...restProps} data={data}>\r\n      <div className={classes.container}>\r\n        <div className={classes.title}>{data.title}</div>\r\n        <div>{data.lessonType}</div>\r\n        <div>{data.location}</div>\r\n      </div>\r\n    </Appointments.AppointmentContent>\r\n  );\r\n};\r\n\r\nconst TimeTableCell = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <WeekView.TimeTableCell {...props} className={classes.timeTableCell} />\r\n  );\r\n};\r\n\r\nconst TimeLabel = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <WeekView.TimeScaleLabel\r\n      {...props}\r\n      formatDate={(date) =>\r\n        date\r\n          .toLocaleTimeString([], {\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n            hour12: false,\r\n          })\r\n          .replace(\":\", \"\")\r\n      }\r\n      className={classes.timeLabel}\r\n    />\r\n  );\r\n};\r\n\r\nconst TickCell = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <WeekView.TimeScaleTickCell {...props} className={classes.timeTableCell} />\r\n  );\r\n};\r\n\r\nconst Timetable = ({ bookedSlots }) => {\r\n  const [showTimeTable, setShowTimeTable] = useState(false);\r\n  const [showLessons, setShowLessons] = useState(true);\r\n  const [firstDayOfWeek, SetFirstDayOfWeek] = useState(0);\r\n  const [timeTableLink, setTimeTableLink] = useState(\r\n    \"https://nusmods.com/timetable/st-i/share?TBA2101=TUT:2,LEC:1\"\r\n  );\r\n  const [linkError, setLinkError] = useState(false);\r\n  const [appointments, setAppointments] = useState([]);\r\n  const classes = useStyles();\r\n\r\n  const retrieveSemester = () => {\r\n    const semMatch = timeTableLink.match(/sem-[1|2]/);\r\n    const specialMatch = timeTableLink.match(/st-i{2}\\/|st-i\\//);\r\n    if (!semMatch && !specialMatch) {\r\n      setLinkError(true);\r\n    } else if (semMatch) {\r\n      setLinkError(false);\r\n      return parseInt(semMatch[0].slice(4, 5));\r\n    } else if (specialMatch) {\r\n      setLinkError(false);\r\n      const length = specialMatch[0].length;\r\n      // Special match is either \"st-i/\" or \"st-ii/\". They are semesters 3 and 4 respectively.\r\n      return length === 5 ? 3 : 4;\r\n    }\r\n  };\r\n\r\n  // Deserialize timetable to an object, where keys are modules and values are objects of lessons\r\n  const deserializeTimetable = () => {\r\n    const serialized = timeTableLink.match(/\\?\\S*/);\r\n    if (!serialized) {\r\n      setLinkError(true);\r\n    } else {\r\n      setLinkError(false);\r\n      const params = qs.parse(serialized[0]);\r\n      return mapValues(params, parseModuleConfig);\r\n    }\r\n  };\r\n\r\n  // Parsing timetable object where values are strings to values of objects\r\n  const parseModuleConfig = (serialized) => {\r\n    const config = {};\r\n    if (!serialized) return config;\r\n\r\n    castArray(serialized).forEach((serializedModule) => {\r\n      serializedModule.split(LESSON_SEP).forEach((lesson) => {\r\n        const [lessonTypeAbbr, classNo] = lesson.split(LESSON_TYPE_SEP);\r\n        const lessonType = LESSON_ABBREV_TYPE[lessonTypeAbbr];\r\n        // Ignore unparsable/invalid keys\r\n        if (!lessonType) return;\r\n        config[lessonType] = classNo;\r\n      });\r\n    });\r\n\r\n    return config;\r\n  };\r\n\r\n  // Get the Sunday of the current week\r\n  const getSunday = (date) => {\r\n    date = new Date(date);\r\n    const day = date.getDay();\r\n    const diff = date.getDate() - day;\r\n    return new Date(date.setDate(diff));\r\n  };\r\n\r\n  const setTimetable = async (semester, timetable) => {\r\n    const sunday = getSunday(new Date());\r\n    let allLessons = [];\r\n\r\n    // Loop through each module in the timetable\r\n    for (const [moduleName, moduleLessons] of Object.entries(timetable)) {\r\n      await fetch(\r\n        `https://api.nusmods.com/v2/2021-2022/modules/${moduleName}.json`,\r\n        {\r\n          method: \"get\",\r\n        }\r\n      )\r\n        .then((res) => res.json())\r\n        // eslint-disable-next-line\r\n        .then((moduleData) => {\r\n          // Retrieve this semester's module data\r\n          const [currentSemesterData] = moduleData.semesterData.filter(\r\n            (semesterData) => semesterData.semester === semester\r\n          );\r\n\r\n          // If the semester data cannot be found\r\n          if (!currentSemesterData) {\r\n            setLinkError(true);\r\n            return;\r\n          }\r\n\r\n          // Filter lessons for the module which matches the timetable\r\n          let filteredLessons = Object.keys(moduleLessons).flatMap(\r\n            (lessonType) =>\r\n              currentSemesterData.timetable.filter(\r\n                (lesson) =>\r\n                  lesson.classNo === moduleLessons[lessonType] &&\r\n                  lesson.lessonType === lessonType\r\n              )\r\n          );\r\n\r\n          // If alwaysShowLessons is false, hide lessons which are not available for the current week\r\n          if (!showLessons) {\r\n            const acadWeekInfo = nusmoderator.academicCalendar.getAcadWeekInfo(\r\n              new Date()\r\n            );\r\n            const currentSem = SEMESTER_NUM[acadWeekInfo.sem];\r\n            const currentWeek = acadWeekInfo.num;\r\n            filteredLessons = filteredLessons.filter(\r\n              (lesson) =>\r\n                currentSem === semester && lesson.weeks.includes(currentWeek)\r\n            );\r\n          }\r\n\r\n          // Create an array of appointments based on the module\r\n          const lessons = filteredLessons.map((lesson) => {\r\n            const title = moduleName;\r\n\r\n            // Retrieve start and end times\r\n            const startHour = parseInt(lesson.startTime.slice(0, 2));\r\n            const startMinute = parseInt(lesson.startTime.slice(2, 4));\r\n            const endHour = parseInt(lesson.endTime.slice(0, 2));\r\n            const endMinute = parseInt(lesson.endTime.slice(2, 4));\r\n\r\n            // Set start and end dates\r\n            const startDate = addDays(sunday, DAY_OF_WEEK[lesson.day]);\r\n            const endDate = addDays(sunday, DAY_OF_WEEK[lesson.day]);\r\n            startDate.setHours(startHour, startMinute, 0, 0);\r\n            endDate.setHours(endHour, endMinute, 0, 0);\r\n\r\n            const lessonType = `${LESSON_TYPE_ABBREV[lesson.lessonType]} [${\r\n              lesson.classNo\r\n            }]`;\r\n\r\n            const location = lesson.venue;\r\n            const isLesson = true;\r\n            return {\r\n              title,\r\n              startDate,\r\n              endDate,\r\n              lessonType,\r\n              location,\r\n              isLesson,\r\n            };\r\n          });\r\n          allLessons = allLessons.concat(lessons);\r\n        });\r\n    }\r\n    return allLessons;\r\n  };\r\n\r\n  const setBookedSlots = () => {\r\n    bookedSlots = bookedSlots.map((slot) => {\r\n      const title = \"Facility Booking\";\r\n      const startDate = new Date(slot.date);\r\n      const endDate =\r\n        startDate.getMinutes() === 0\r\n          ? addHours(startDate, 1)\r\n          : addMinutes(addHours(startDate, 1), 30);\r\n      const location = slot.facility;\r\n      const isLesson = false;\r\n      return { title, startDate, endDate, location, isLesson };\r\n    });\r\n    return bookedSlots;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const updateTimetable = async () => {\r\n      const semester = retrieveSemester();\r\n      if (!semester) {\r\n        return;\r\n      }\r\n      const deserializedTimetable = deserializeTimetable();\r\n      if (!deserializedTimetable) {\r\n        return;\r\n      }\r\n      const lessons = await setTimetable(semester, deserializedTimetable);\r\n      const slots = await setBookedSlots();\r\n      setAppointments([...lessons, ...slots]);\r\n    };\r\n    updateTimetable();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [timeTableLink, showLessons, bookedSlots]);\r\n\r\n  const handleShowTimetableChange = () => {\r\n    setShowTimeTable(!showTimeTable);\r\n  };\r\n  const handleShowLessons = () => {\r\n    setShowLessons(!showLessons);\r\n  };\r\n  const handleFirstDayOfWeekChange = (e) => SetFirstDayOfWeek(e.target.value);\r\n  const handleLinkChange = (e) => setTimeTableLink(e.target.value);\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box className={classes.inputContainer}>\r\n        <Button\r\n          onClick={handleShowTimetableChange}\r\n          variant=\"contained\"\r\n          className={classes.timetableButton}\r\n        >\r\n          {showTimeTable ? \"Hide Timetable\" : \"Show Timetable\"}\r\n        </Button>\r\n\r\n        {showTimeTable && (\r\n          <Tooltip\r\n            title={\r\n              showLessons\r\n                ? \"Only show lessons which occur during the current academic week\"\r\n                : \"Show lessons regardless of academic week\"\r\n            }\r\n          >\r\n            <Button\r\n              onClick={handleShowLessons}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              className={classes.lessonsButton}\r\n            >\r\n              {showLessons ? \"Hide Lessons\" : \"Always Show Lessons\"}\r\n            </Button>\r\n          </Tooltip>\r\n        )}\r\n\r\n        {showTimeTable && (\r\n          <TextField\r\n            select\r\n            label=\"First Day of Week\"\r\n            variant=\"outlined\"\r\n            className={classes.select}\r\n            onChange={handleFirstDayOfWeekChange}\r\n            value={firstDayOfWeek}\r\n          >\r\n            <MenuItem value={0}>Sunday</MenuItem>\r\n            <MenuItem value={1}>Monday</MenuItem>\r\n          </TextField>\r\n        )}\r\n\r\n        {showTimeTable && (\r\n          <TextField\r\n            error={linkError}\r\n            label={linkError ? \"Error\" : \"NUSMods Share Link\"}\r\n            helperText={linkError ? \"Invalid Link\" : \"\"}\r\n            value={timeTableLink}\r\n            variant=\"outlined\"\r\n            onChange={handleLinkChange}\r\n            className={classes.inputField}\r\n          />\r\n        )}\r\n      </Box>\r\n\r\n      {showTimeTable && (\r\n        <Paper>\r\n          <Scheduler firstDayOfWeek={firstDayOfWeek} data={appointments}>\r\n            <WeekView\r\n              startDayHour={7}\r\n              endDayHour={22}\r\n              cellDuration={60}\r\n              timeTableCellComponent={TimeTableCell}\r\n              timeScaleLabelComponent={TimeLabel}\r\n              timeScaleTickCellComponent={TickCell}\r\n            />\r\n            <Appointments\r\n              appointmentComponent={AppointmentComponent}\r\n              appointmentContentComponent={AppointmentContent}\r\n            />\r\n            <CurrentTimeIndicator />\r\n          </Scheduler>\r\n        </Paper>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Timetable;\r\n","import {\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  Chip,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { blueGrey, lightBlue } from \"@material-ui/core/colors\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { addDays } from \"date-fns\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SlotContainer from \"./SlotContainer\";\r\nimport Timetable from \"./Timetable\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  box: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    width: \"50%\",\r\n  },\r\n  button: {\r\n    padding: theme.spacing(1.5, 2),\r\n    cursor: \"pointer\",\r\n    border: 0,\r\n    borderRadius: 5,\r\n    backgroundColor: lightBlue[600],\r\n    color: \"white\",\r\n    \"&:hover\": {\r\n      backgroundColor: lightBlue[800],\r\n    },\r\n  },\r\n  circularProgress: {\r\n    marginBottom: theme.spacing(1.5),\r\n    color: blueGrey[200],\r\n  },\r\n  paper: {\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  header: {\r\n    paddingTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\n// Weekday and weekend slots for all facilities\r\nconst facilities = [\r\n  {\r\n    name: \"Kent Ridge Swimming Pool\",\r\n    weekdayHours: [\r\n      \"0730\",\r\n      \"0900\",\r\n      \"1000\",\r\n      \"1100\",\r\n      \"1200\",\r\n      \"1300\",\r\n      \"1400\",\r\n      \"1500\",\r\n      \"1600\",\r\n      \"1700\",\r\n      \"1800\",\r\n      \"1900\",\r\n      \"2000\",\r\n    ],\r\n    weekendHours: [\r\n      \"0900\",\r\n      \"1000\",\r\n      \"1100\",\r\n      \"1200\",\r\n      \"1300\",\r\n      \"1400\",\r\n      \"1500\",\r\n      \"1600\",\r\n      \"1700\",\r\n      \"1800\",\r\n    ],\r\n  },\r\n  {\r\n    name: \"University Town Swimming Pool\",\r\n    weekdayHours: [\r\n      \"0730\",\r\n      \"0900\",\r\n      \"1000\",\r\n      \"1100\",\r\n      \"1200\",\r\n      \"1300\",\r\n      \"1400\",\r\n      \"1500\",\r\n      \"1600\",\r\n      \"1700\",\r\n      \"1800\",\r\n      \"1900\",\r\n      \"2000\",\r\n    ],\r\n    weekendHours: [\r\n      \"0900\",\r\n      \"1000\",\r\n      \"1100\",\r\n      \"1200\",\r\n      \"1300\",\r\n      \"1400\",\r\n      \"1500\",\r\n      \"1600\",\r\n      \"1700\",\r\n      \"1800\",\r\n    ],\r\n  },\r\n  {\r\n    name: \"Kent Ridge Gym\",\r\n    weekdayHours: [\r\n      \"1100\",\r\n      \"1200\",\r\n      \"1300\",\r\n      \"1400\",\r\n      \"1500\",\r\n      \"1600\",\r\n      \"1700\",\r\n      \"1800\",\r\n      \"1900\",\r\n    ],\r\n    weekendHours: [],\r\n  },\r\n  {\r\n    name: \"University Sports Centre Gym\",\r\n    weekdayHours: [\r\n      \"0900\",\r\n      \"1000\",\r\n      \"1100\",\r\n      \"1200\",\r\n      \"1300\",\r\n      \"1400\",\r\n      \"1500\",\r\n      \"1600\",\r\n      \"1700\",\r\n      \"1800\",\r\n      \"1900\",\r\n      \"2000\",\r\n    ],\r\n    weekendHours: [\r\n      \"0900\",\r\n      \"1000\",\r\n      \"1100\",\r\n      \"1200\",\r\n      \"1300\",\r\n      \"1400\",\r\n      \"1500\",\r\n      \"1600\",\r\n      \"1700\",\r\n      \"1800\",\r\n    ],\r\n  },\r\n  {\r\n    name: \"University Town Gym\",\r\n    weekdayHours: [\r\n      \"0700\",\r\n      \"0800\",\r\n      \"0900\",\r\n      \"1000\",\r\n      \"1100\",\r\n      \"1200\",\r\n      \"1300\",\r\n      \"1400\",\r\n      \"1500\",\r\n      \"1600\",\r\n      \"1700\",\r\n      \"1800\",\r\n      \"1900\",\r\n      \"2000\",\r\n      \"2100\",\r\n    ],\r\n    weekendHours: [\r\n      \"0700\",\r\n      \"0800\",\r\n      \"0900\",\r\n      \"1000\",\r\n      \"1100\",\r\n      \"1200\",\r\n      \"1300\",\r\n      \"1400\",\r\n      \"1500\",\r\n      \"1600\",\r\n      \"1700\",\r\n      \"1800\",\r\n      \"1900\",\r\n      \"2000\",\r\n      \"2100\",\r\n    ],\r\n  },\r\n  {\r\n    name: \"Wellness Outreach Gym\",\r\n    weekdayHours: [\r\n      \"0700\",\r\n      \"0800\",\r\n      \"0900\",\r\n      \"1000\",\r\n      \"1100\",\r\n      \"1200\",\r\n      \"1300\",\r\n      \"1400\",\r\n      \"1500\",\r\n      \"1600\",\r\n      \"1700\",\r\n      \"1800\",\r\n      \"1900\",\r\n      \"2000\",\r\n      \"2100\",\r\n    ],\r\n    weekendHours: [],\r\n  },\r\n];\r\n\r\nconst Booking = ({ handleAlert }) => {\r\n  const classes = useStyles();\r\n\r\n  const [facility, setFacility] = useState(facilities[0]);\r\n  const [selectedSlot, setSelectedSlot] = useState({});\r\n  const [bookedSlots, setBookedSlots] = useState([]);\r\n  const [allBookedSlots, setAllBookedSlots] = useState([]);\r\n  const [slotCount, setSlotCount] = useState([]);\r\n  const [submitValue, setSubmitValue] = useState(\"Book\");\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [creditsLeft, setCreditsLeft] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  // Date object\r\n  const now = new Date();\r\n  const day = now.getDay();\r\n\r\n  console.log(history.location.state);\r\n\r\n  useEffect(() => {\r\n    async function getCreditsLeft() {\r\n      const url = `${\r\n        window.location.hostname === \"local.nusfitness.com\"\r\n          ? \"http://local.nusfitness.com:5000/\"\r\n          : \"https://salty-reaches-24995.herokuapp.com/\"\r\n      }creditsLeft`;\r\n\r\n      const res = await fetch(url, {\r\n        method: \"post\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      setCreditsLeft(data.credits);\r\n    }\r\n\r\n    getCreditsLeft();\r\n  }, []);\r\n\r\n  // Changing facility\r\n  const handleFacilityChange = (e) => {\r\n    setFacility(\r\n      facilities.filter((facility) => facility.name === e.target.value)[0]\r\n    );\r\n    setSelectedSlot({});\r\n  };\r\n\r\n  // Changing a slot\r\n  const handleSlotChange = (e) => {\r\n    const checkbox = e.target;\r\n    if (checkbox.checked) {\r\n      setSelectedSlot({\r\n        date: new Date(checkbox.attributes.date.value),\r\n      });\r\n    } else {\r\n      setSelectedSlot({});\r\n    }\r\n\r\n    // Update submit value\r\n    const selectedSlot = {\r\n      date: new Date(checkbox.attributes.date.value),\r\n    };\r\n    Object.keys(selectedSlot).length !== 0 &&\r\n      (bookedSlots.find(\r\n        (slot) => slot.date.getTime() === selectedSlot.date.getTime()\r\n      )\r\n        ? setSubmitValue(\"Cancel\")\r\n        : setSubmitValue(\"Book\"));\r\n  };\r\n\r\n  // Submit booking\r\n  const handleSubmit = useCallback(\r\n    async (e) => {\r\n      e.preventDefault();\r\n      if (submitValue === \"Cancel\") {\r\n        const url = `${\r\n          window.location.hostname === \"local.nusfitness.com\"\r\n            ? \"http://local.nusfitness.com:5000/\"\r\n            : \"https://salty-reaches-24995.herokuapp.com/\"\r\n        }cancel`;\r\n\r\n        setLoading(true);\r\n\r\n        fetch(url, {\r\n          method: \"post\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            facility: facility.name,\r\n            ...selectedSlot,\r\n          }),\r\n          credentials: \"include\",\r\n        })\r\n          .then((response) => {\r\n            if (response.status === 401) {\r\n              setLoading(false);\r\n              handleAlert(\r\n                \"You are unauthorised to cancel the slot. Please contact the website's administrator\",\r\n                \"error\"\r\n              );\r\n            } else if (response.status === 403) {\r\n              setLoading(false);\r\n              handleAlert(\r\n                \"Unable to cancel slot because it is within the 2 hour cancellation window.\",\r\n                \"error\"\r\n              );\r\n            } else if (response.status === 404) {\r\n              setLoading(false);\r\n              handleAlert(\r\n                \"Slot cannot be found. Please contact the website's administrator\",\r\n                \"error\"\r\n              );\r\n            }\r\n            setSelectedSlot({});\r\n            return response.json();\r\n          })\r\n          .then((data) => {\r\n            if (data.success) {\r\n              setLoading(false);\r\n              handleAlert(\"Your slot has been cancelled.\", \"success\");\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      } else {\r\n        const url = `${\r\n          window.location.hostname === \"local.nusfitness.com\"\r\n            ? \"http://local.nusfitness.com:5000\"\r\n            : \"https://salty-reaches-24995.herokuapp.com\"\r\n        }`;\r\n\r\n        setLoading(true);\r\n\r\n        const res = await fetch(`${url}/updateCredits`, {\r\n          method: \"post\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          credentials: \"include\",\r\n        });\r\n\r\n        const data = await res.json();\r\n\r\n        if (data.success) {\r\n          fetch(`${url}/book`, {\r\n            method: \"post\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n              facility: facility.name,\r\n              ...selectedSlot,\r\n            }),\r\n            credentials: \"include\",\r\n          })\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n              if (data.success) {\r\n                setLoading(false);\r\n                setCreditsLeft(creditsLeft - 1);\r\n                handleAlert(\"Your slot has been booked!\", \"success\");\r\n              } else {\r\n                setLoading(false);\r\n                handleAlert(\"Slot has been fully booked.\", \"error\");\r\n              }\r\n              setSelectedSlot({});\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n            });\r\n        } else {\r\n          setLoading(false);\r\n          handleAlert(\r\n            \"You have insufficient credits left for this week.\",\r\n            \"error\"\r\n          );\r\n        }\r\n      }\r\n    },\r\n    [submitValue, handleAlert, facility.name, selectedSlot, creditsLeft]\r\n  );\r\n\r\n  // Retrieve booked slots\r\n  useEffect(() => {\r\n    const url = `${\r\n      window.location.hostname === \"local.nusfitness.com\"\r\n        ? \"http://local.nusfitness.com:5000/\"\r\n        : \"https://salty-reaches-24995.herokuapp.com/\"\r\n    }bookedSlots`;\r\n    fetch(url, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        facility: facility.name,\r\n      }),\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) =>\r\n        setBookedSlots(\r\n          res.map((e) => ({ facility: e.facility, date: new Date(e.date) }))\r\n        )\r\n      )\r\n      .catch((err) => console.log(err));\r\n  }, [handleSubmit, facility.name]);\r\n\r\n  // Retrieve all booked slots\r\n  useEffect(() => {\r\n    const url = `${\r\n      window.location.hostname === \"local.nusfitness.com\"\r\n        ? \"http://local.nusfitness.com:5000/\"\r\n        : \"https://salty-reaches-24995.herokuapp.com/\"\r\n    }bookedSlots`;\r\n    fetch(url, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) =>\r\n        setAllBookedSlots(\r\n          res.map((e) => ({ facility: e.facility, date: new Date(e.date) }))\r\n        )\r\n      )\r\n      .catch((err) => console.log(err));\r\n  }, [handleSubmit]);\r\n\r\n  // Retrieve slots left\r\n  const todayDate = new Date(now.getFullYear(), now.getMonth(), now.getDate());\r\n  useEffect(() => {\r\n    const url = `${\r\n      window.location.hostname === \"local.nusfitness.com\"\r\n        ? \"http://local.nusfitness.com:5000/\"\r\n        : \"https://salty-reaches-24995.herokuapp.com/\"\r\n    }slots`;\r\n    fetch(url, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        facility: facility.name,\r\n        startDate: todayDate,\r\n        endDate: addDays(todayDate, 3),\r\n      }),\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) =>\r\n        setSlotCount(\r\n          res.map((e) => ({ date: new Date(e._id), count: e.count }))\r\n        )\r\n      )\r\n      .catch((err) => console.log(err));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [facility, selectedSlot]);\r\n\r\n  // Handle dialog actions\r\n  const handleClickOpen = (e) => {\r\n    e.preventDefault();\r\n    setOpenDialog(true);\r\n  };\r\n  const handleClose = () => setOpenDialog(false);\r\n\r\n  const slotContainers = [];\r\n  for (let i = 0; i < 3; i++) {\r\n    slotContainers[i] = (\r\n      <SlotContainer\r\n        key={addDays(now, i).toLocaleDateString()}\r\n        facility={facility.name}\r\n        assignedDate={addDays(now, i)}\r\n        hours={\r\n          (day + i) % 7 === 0 || (day + i) % 7 === 6\r\n            ? facility.weekendHours\r\n            : facility.weekdayHours\r\n        }\r\n        handleChange={handleSlotChange}\r\n        selectedSlot={selectedSlot}\r\n        bookedSlots={bookedSlots}\r\n        slotCount={slotCount}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Timetable handleAlert={handleAlert} bookedSlots={allBookedSlots} />\r\n\r\n      <Paper className={classes.paper}>\r\n        <Typography variant=\"h4\" align=\"center\" className={classes.header}>\r\n          Book a Facility\r\n        </Typography>\r\n        <Box className={classes.box}>\r\n          <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel id=\"facility-label\">Select Facility</InputLabel>\r\n            <Select\r\n              value={facility.name}\r\n              labelId=\"facility-label\"\r\n              id=\"facility\"\r\n              onChange={handleFacilityChange}\r\n              label=\"Select Facility\"\r\n            >\r\n              {facilities.map((facility, index) => (\r\n                <MenuItem key={index} value={facility.name}>\r\n                  {facility.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Box>\r\n\r\n        <Box display=\"flex\" mt={2} justifyContent=\"center\">\r\n          <Chip\r\n            label={\r\n              <Typography>\r\n                <strong>Remaining credits this week:</strong> {creditsLeft}\r\n              </Typography>\r\n            }\r\n          />\r\n        </Box>\r\n\r\n        {loading ? (\r\n          <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" mt={3}>\r\n            <CircularProgress className={classes.circularProgress} />\r\n            <Typography variant=\"h4\">Processing Your Request...</Typography>\r\n          </Box>\r\n        ) : (\r\n          <form onSubmit={handleClickOpen}>\r\n            {slotContainers}\r\n            {Object.keys(selectedSlot).length !== 0 && (\r\n              <Box display=\"flex\" justifyContent=\"center\">\r\n                <input\r\n                  type=\"submit\"\r\n                  value={submitValue}\r\n                  className={classes.button}\r\n                />\r\n              </Box>\r\n            )}\r\n          </form>\r\n        )}\r\n      </Paper>\r\n\r\n      <Dialog open={openDialog} onClose={handleClose}>\r\n        <DialogTitle>\r\n          {submitValue === \"Book\"\r\n            ? \"Book selected slot?\"\r\n            : \"Cancel selected slot?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>{`Facility: ${facility.name}`}</DialogContentText>\r\n          <DialogContentText>{`Date: ${\r\n            selectedSlot.date && selectedSlot.date.toDateString()\r\n          }`}</DialogContentText>\r\n          <DialogContentText>{`Hour: ${\r\n            selectedSlot.date &&\r\n            selectedSlot.date\r\n              .toLocaleTimeString([], {\r\n                hour: \"2-digit\",\r\n                minute: \"2-digit\",\r\n                hour12: false,\r\n              })\r\n              .replace(\":\", \"\")\r\n          }`}</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            No\r\n          </Button>\r\n          <Button\r\n            onClick={(e) => {\r\n              handleClose();\r\n              handleSubmit(e);\r\n            }}\r\n            color=\"primary\"\r\n          >\r\n            Yes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Booking;\r\n","import { Box } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport Booking from \"./Booking\";\r\nimport Dashboard from \"./Dashboard\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n  },\r\n}));\r\n\r\nconst Home = ({ handleAlert, loggedIn, setLoggedIn }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {loggedIn ? (\r\n        <Box mt={2}>\r\n          <Booking handleAlert={handleAlert} />\r\n        </Box>\r\n      ) : (\r\n        <Dashboard />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useState } from \"react\";\r\nimport { lightBlue } from \"@material-ui/core/colors\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: \"350px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid grey\",\r\n    borderRadius: 5,\r\n    padding: theme.spacing(4),\r\n    margin: \"0 auto\",\r\n    textAlign: \"center\",\r\n    marginTop: theme.spacing(8),\r\n  },\r\n  formControl: {\r\n    display: \"flex\",\r\n    marginBottom: theme.spacing(4),\r\n  },\r\n  helperText: {\r\n    textAlign: \"center\",\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  button: {\r\n    backgroundColor: lightBlue[600],\r\n    \"&:hover\": {\r\n      backgroundColor: lightBlue[800],\r\n    },\r\n  },\r\n  link: {\r\n    color: \"#EF7C00\",\r\n    textDecoration: \"none\",\r\n  },\r\n}));\r\n\r\nconst Login = ({ handleAlert, loggedIn, setLoggedIn }) => {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  let history = useHistory();\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const url = `${\r\n      window.location.hostname === \"local.nusfitness.com\"\r\n        ? \"http://local.nusfitness.com:5000/\"\r\n        : \"https://salty-reaches-24995.herokuapp.com/\"\r\n    }login`;\r\n    fetch(url, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email,\r\n        password,\r\n      }),\r\n      credentials: \"include\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.success) {\r\n          handleAlert(\"Successfully logged in!\", \"success\");\r\n          setLoggedIn(true);\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        handleAlert(\"Failed to login, please try again! :(\", \"error\");\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Typography variant=\"h6\">Login</Typography>\r\n      <form onSubmit={onSubmit}>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel htmlFor=\"email\">Email</InputLabel>\r\n          <Input\r\n            id=\"email\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </FormControl>\r\n\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n          <Input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </FormControl>\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n          onSubmit={onSubmit}\r\n          disableElevation\r\n          className={classes.button}\r\n        >\r\n          Login\r\n        </Button>\r\n      </form>\r\n      <FormHelperText className={classes.helperText}>\r\n        New user? Click{\" \"}\r\n        <Link to=\"/register\" className={classes.link}>\r\n          here\r\n        </Link>{\" \"}\r\n        to register now!\r\n      </FormHelperText>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import AppBar from \"@material-ui/core/AppBar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { lightBlue } from \"@material-ui/core/colors\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  titleLink: {\r\n    textDecoration: \"none\",\r\n    color: \"white\",\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"white\",\r\n  },\r\n  appBar: {\r\n    backgroundColor: lightBlue[700],\r\n  },\r\n}));\r\n\r\nconst Navbar = ({ loggedIn, setLoggedIn }) => {\r\n  const classes = useStyles();\r\n\r\n  const handleLogout = (e) => {\r\n    e.preventDefault();\r\n    const url = `${\r\n      window.location.hostname === \"local.nusfitness.com\"\r\n        ? \"http://local.nusfitness.com:5000/\"\r\n        : \"https://salty-reaches-24995.herokuapp.com/\"\r\n    }logout`;\r\n    fetch(url, {\r\n      credentials: \"include\",\r\n    }).catch((err) => console.log(err));\r\n\r\n    setLoggedIn(false);\r\n  };\r\n  return (\r\n    <nav className={classes.root}>\r\n      <AppBar position=\"static\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            <Link to=\"/\" className={classes.titleLink}>\r\n              NUSFitness\r\n            </Link>\r\n          </Typography>\r\n          {loggedIn ? (\r\n            <Fragment>\r\n              <Button>\r\n                <Link to=\"/\" className={classes.link}>\r\n                  Home\r\n                </Link>\r\n              </Button>\r\n              <Button>\r\n                <Link to=\"/dashboard\" className={classes.link}>\r\n                  Dashboard\r\n                </Link>\r\n              </Button>\r\n              <Button>\r\n                <Link to=\"/profile\" className={classes.link}>\r\n                  Profile\r\n                </Link>\r\n              </Button>\r\n              <Button>\r\n                <Link to=\"/\" onClick={handleLogout} className={classes.link}>\r\n                  Logout\r\n                </Link>\r\n              </Button>\r\n            </Fragment>\r\n          ) : (\r\n            <Fragment>\r\n              <Button>\r\n                <Link to=\"/login\" className={classes.link}>\r\n                  Login\r\n                </Link>\r\n              </Button>\r\n              <Button>\r\n                <Link to=\"/register\" className={classes.link}>\r\n                  Register\r\n                </Link>\r\n              </Button>\r\n            </Fragment>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { lightBlue } from \"@material-ui/core/colors\";\r\nimport React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: \"350px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid grey\",\r\n    borderRadius: 5,\r\n    padding: theme.spacing(4),\r\n    margin: \"0 auto\",\r\n    textAlign: \"center\",\r\n    marginTop: theme.spacing(8),\r\n  },\r\n  formControl: {\r\n    display: \"flex\",\r\n    marginBottom: theme.spacing(4),\r\n  },\r\n  helperText: {\r\n    textAlign: \"center\",\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  button: {\r\n    backgroundColor: lightBlue[600],\r\n    \"&:hover\": {\r\n      backgroundColor: lightBlue[800],\r\n    },\r\n  },\r\n  link: {\r\n    color: \"#EF7C00\",\r\n    textDecoration: \"none\",\r\n  },\r\n}));\r\n\r\nconst Register = ({ handleAlert, loggedIn, setLoggedIn }) => {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  let history = useHistory();\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Has to be an NUS email\r\n    if (!email.includes(\"u.nus.edu\")) {\r\n      handleAlert(\"Please enter a valid NUS email\", \"error\");\r\n      setEmail(\"\");\r\n      setPassword(\"\");\r\n      return;\r\n    }\r\n\r\n    const url = `${\r\n      window.location.hostname === \"local.nusfitness.com\"\r\n        ? \"http://local.nusfitness.com:5000/\"\r\n        : \"https://salty-reaches-24995.herokuapp.com/\"\r\n    }register`;\r\n    fetch(url, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email,\r\n        password,\r\n      }),\r\n      credentials: \"include\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((user) => {\r\n        if (user._id) {\r\n          handleAlert(\r\n            \"Successfully registered! Head to the profile section to sync with telegram!\",\r\n            \"info\"\r\n          );\r\n          setLoggedIn(true);\r\n          history.push(\"/\");\r\n        } else {\r\n          handleAlert(\"Failed to register, please try again! :(\", \"error\");\r\n          setEmail(\"\");\r\n          setPassword(\"\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Typography variant=\"h6\">Register</Typography>\r\n      <form onSubmit={onSubmit}>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel htmlFor=\"email\">Email</InputLabel>\r\n          <Input\r\n            className={classes.input}\r\n            id=\"email\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </FormControl>\r\n\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n          <Input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </FormControl>\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n          onSubmit={onSubmit}\r\n          disableElevation\r\n          className={classes.button}\r\n        >\r\n          Register\r\n        </Button>\r\n      </form>\r\n      <FormHelperText className={classes.helperText}>\r\n        Already a user? Click{\" \"}\r\n        <Link to=\"/login\" className={classes.link}>\r\n          here\r\n        </Link>{\" \"}\r\n        to login now!\r\n      </FormHelperText>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import TelegramLoginButton from \"react-telegram-login\";\r\n\r\nconst TelegramLogin = () => {\r\n  const handleTelegramResponse = (response) => {\r\n    const url = `${\r\n      window.location.hostname === \"local.nusfitness.com\"\r\n        ? \"http://local.nusfitness.com:5000/\"\r\n        : \"https://salty-reaches-24995.herokuapp.com/\"\r\n    }telegram/login`;\r\n\r\n    fetch(url, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        name: response.first_name,\r\n        chatId: response.id,\r\n      }),\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (!res.success) console.log(res);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <TelegramLoginButton\r\n      dataOnauth={handleTelegramResponse}\r\n      botName=\"NUSFitness_Bot\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default TelegramLogin;\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Chip, \r\n  CircularProgress,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { blueGrey } from \"@material-ui/core/colors\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport TelegramLogin from \"./TelegramLogin\";\r\n  \r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(4),\r\n  },\r\n  container: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      flexDirection: \"column\",\r\n      alignItems: \"inherit\"\r\n    },\r\n  },\r\n  tableContainer: {\r\n    width: \"inherit\",\r\n  },\r\n  circularProgress: {\r\n    margin: \"0 auto\",\r\n    color: blueGrey[200]\r\n  },\r\n  profileBox: {\r\n    border: \"1px solid grey\",\r\n    borderRadius: 12,\r\n  },\r\n  avatar: {\r\n    width: 200,\r\n    height: 200,\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(1)\r\n  },\r\n  info: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  chip: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  telegramLogin: {\r\n    marginTop: theme.spacing(2),\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginBottom: theme.spacing(2)\r\n    },\r\n  }\r\n}));\r\n  \r\nconst Profile = ({ handleAlert, loggedIn }) => {\r\n  const classes = useStyles();\r\n  const [slots, setSlots] = useState([]);\r\n  const [loading, setLoading] = useState();\r\n  const [profile, setProfile] = useState({});\r\n  const [creditsLeft, setCreditsLeft] = useState();\r\n\r\n  // Retrieve booked slots\r\n  useEffect(() => {\r\n    const url = `${\r\n      window.location.hostname === \"local.nusfitness.com\"\r\n        ? \"http://local.nusfitness.com:5000/\"\r\n        : \"https://salty-reaches-24995.herokuapp.com/\"\r\n    }bookedSlots`;\r\n\r\n    setLoading(true);\r\n\r\n    fetch(url, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        setSlots(\r\n          res.map((e) => ({ facility: e.facility, date: new Date(e.date) }))\r\n        )\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  // Retrieve profile info\r\n  useEffect(() => {\r\n    const url = `${\r\n      window.location.hostname === \"local.nusfitness.com\"\r\n        ? \"http://local.nusfitness.com:5000/\"\r\n        : \"https://salty-reaches-24995.herokuapp.com/\"\r\n    }profile`;\r\n\r\n    fetch(url, {\r\n      method: \"get\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      credentials: \"include\",\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setProfile(data);\r\n        console.log(profile);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // Get credits left\r\n  useEffect(() => {\r\n    async function getCreditsLeft() {\r\n    const url = `${\r\n      window.location.hostname === \"local.nusfitness.com\"\r\n      ? \"http://local.nusfitness.com:5000/\"\r\n      : \"https://salty-reaches-24995.herokuapp.com/\"\r\n    }creditsLeft`;\r\n\r\n    const res = await fetch(url, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      credentials: \"include\",\r\n    });\r\n\r\n    const data = await res.json();\r\n\r\n    setCreditsLeft(data.credits);\r\n    }\r\n\r\n    getCreditsLeft();\r\n  }, []);\r\n\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      {!loggedIn ? (\r\n        <Dashboard />\r\n      ) : (\r\n        <Box display=\"flex\" justifyContent=\"center\" className={classes.container} alignItems=\"flex-start\">\r\n          {/* Profile info and telegram */}\r\n          <Box ml={2} mr={2} flex={3} display=\"flex\" flexDirection=\"column\">\r\n            <Box display=\"flex\" alignItems=\"center\" flexDirection=\"column\" className={classes.profileBox}>\r\n              <Avatar src={`https://robohash.org/${profile.email}?set=set5`} className={classes.avatar} />\r\n              <Typography variant=\"h6\">{profile.email}</Typography>\r\n\r\n              <Box className={classes.info} display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n                  <Typography><strong>Joined:</strong> {new Date(profile.joined).toLocaleDateString()}</Typography>\r\n              </Box>\r\n            </Box>\r\n\r\n            <Chip className={classes.chip} label={<Typography><strong>Remaining credits this week:</strong> {creditsLeft}</Typography>} />\r\n\r\n            <Box display=\"flex\" justifyContent=\"center\" className={classes.telegramLogin}>\r\n              <TelegramLogin />\r\n            </Box>\r\n          </Box>\r\n\r\n          {/* Bookings */}\r\n          <Box ml={2} mr={2} display=\"flex\" flexDirection=\"column\" flex={7}>\r\n            <Box display=\"flex\" justifyContent=\"center\" mb={1}>\r\n                <Typography variant=\"h4\">My Bookings</Typography>\r\n            </Box>\r\n            <TableContainer className={classes.tableContainer} component={Paper}>\r\n            <Table>\r\n              <TableHead>\r\n              <TableRow>\r\n                <TableCell>Facility</TableCell>\r\n                <TableCell align=\"right\">Date</TableCell>\r\n                <TableCell align=\"right\">Time</TableCell>\r\n              </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n              {!loading &&\r\n                slots.map((slot) => (\r\n                <TableRow key={slot.facility}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                  {slot.facility}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                  {slot.date.toDateString()}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                  {slot.date\r\n                    .toLocaleTimeString([], {\r\n                    hour: \"2-digit\",\r\n                    minute: \"2-digit\",\r\n                    hour12: false,\r\n                    })\r\n                    .replace(\":\", \"\")}\r\n                  </TableCell>\r\n                </TableRow>\r\n                ))\r\n              }\r\n              </TableBody>\r\n          </Table>\r\n          </TableContainer>\r\n          {loading &&\r\n          <Box display=\"flex\" mt={1.5} justifyContent=\"center\">\r\n            <CircularProgress className={classes.circularProgress} />\r\n          </Box>\r\n          }\r\n          {!loading && !slots.length &&\r\n          <Box display=\"flex\" mt={1.5} justifyContent=\"center\">\r\n            <span>No bookings found.</span>\r\n          </Box>\r\n          }\r\n        </Box>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n  ","import { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport { lightBlue } from \"@material-ui/core/colors\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Alert from \"./components/Alert\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport Home from \"./components/Home\";\r\nimport Login from \"./components/Login\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Register from \"./components/Register\";\r\nimport Profile from \"./components/Profile\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: lightBlue[700],\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiButton: {\r\n      contained: {\r\n        backgroundColor: \"#337ab7\",\r\n        \"&:hover\": {\r\n          backgroundColor: \"#286090\",\r\n        },\r\n        color: \"white\",\r\n      },\r\n    },\r\n    MuiFormLabel: {\r\n      root: {\r\n        \"&$focused\": {\r\n          color: \"#337ab7\",\r\n        },\r\n      },\r\n    },\r\n    MuiInput: {\r\n      underline: {\r\n        \"&:after\": {\r\n          borderBottom: \"2px solid #337ab7\",\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst App = () => {\r\n  const [alert, setAlert] = useState(null);\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n\r\n  const handleAlert = (msg, type) => {\r\n    setAlert({ msg, type });\r\n\r\n    setTimeout(() => {\r\n      setAlert(null);\r\n    }, 3000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const url = `${\r\n      window.location.hostname === \"local.nusfitness.com\"\r\n        ? \"http://local.nusfitness.com:5000/\"\r\n        : \"https://salty-reaches-24995.herokuapp.com/\"\r\n    }isLoggedIn`;\r\n    fetch(url, {\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setLoggedIn(data.authenticated);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setLoggedIn(false);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <div className=\"App\">\r\n          <Navbar loggedIn={loggedIn} setLoggedIn={setLoggedIn} />\r\n          <Alert alert={alert} />\r\n          <Switch>\r\n            <Route exact path=\"/dashboard\">\r\n              <Dashboard />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile handleAlert={handleAlert} loggedIn={loggedIn} />\r\n            </Route>\r\n            <Route exact path=\"/register\">\r\n              <Register\r\n                handleAlert={handleAlert}\r\n                loggedIn={loggedIn}\r\n                setLoggedIn={setLoggedIn}\r\n              />\r\n            </Route>\r\n            <Route exact path=\"/login\">\r\n              <Login\r\n                handleAlert={handleAlert}\r\n                loggedIn={loggedIn}\r\n                setLoggedIn={setLoggedIn}\r\n              />\r\n            </Route>\r\n            <Route exact path=\"/\">\r\n              <Home\r\n                handleAlert={handleAlert}\r\n                loggedIn={loggedIn}\r\n                setLoggedIn={setLoggedIn}\r\n              />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </MuiThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}